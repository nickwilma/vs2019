<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>ExecuteNonQuery-Methode eines SqlCommand aufrufen</Title>
      <Author>Microsoft Corporation</Author>
      <Description>Ruft ExecuteNonQuery für einen vorhandenen Befehl auf.  Umschließt die Ausführung mit einem try/finally-Block, um das Verbindungsobjekt in seinen vorherigen Zustand zurückzuversetzen.</Description>
      <Shortcut>adoExecNonQuery</Shortcut>
    </Header>
    <Snippet>
      <References>
        <Reference>
          <Assembly>System.Data.dll</Assembly>
        </Reference>
        <Reference>
          <Assembly>System.XML.dll</Assembly>
        </Reference>
      </References>
      <Imports>
        <Import>
          <Namespace>System.Data</Namespace>
        </Import>
        <Import>
          <Namespace>System.Data.SqlClient</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Object>
          <ID>conn</ID>
          <Type>SqlConnection</Type>
          <ToolTip>Ersetzen Sie dies durch ein Verbindungsobjekt.</ToolTip>
          <Default>conn</Default>
        </Object>
        <Object>
          <ID>cmd</ID>
          <Type>SqlCommand</Type>
          <ToolTip>Ersetzen Sie dies durch ein auszuführendes Befehlsobjekt.</ToolTip>
          <Default>cmd</Default>
        </Object>
      </Declarations>
      <Code Language="VB" Kind="method body"><![CDATA[        Dim rowCount As Integer
        Dim previousConnectionState As ConnectionState
        previousConnectionState = $conn$.State
        Try
            If $conn$.State = ConnectionState.Closed Then
                $conn$.Open()
            End If
            rowCount = $cmd$.ExecuteNonQuery()

        Finally
            If previousConnectionState = ConnectionState.Closed Then
                $conn$.Close()
            End If
        End Try]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
