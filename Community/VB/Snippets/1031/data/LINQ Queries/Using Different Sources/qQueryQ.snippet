<?xml version="1.0"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Abfrage über Abfrage</Title>
      <Author>Microsoft Corporation</Author>
      <Description>Eine Abfrage über die Ergebnisse einer anderen Abfrage.</Description>
      <Shortcut>qQueryQ</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
	      <Literal>
          <ID>queryResult1</ID>
          <Type>item</Type>
          <ToolTip>Ersetzen Sie dies durch den Bezeichner der ersten Abfrage.</ToolTip>
          <Default>longFruits</Default>
        </Literal>
	      <Literal>
          <ID>queryResult2</ID>
          <Type>item</Type>
          <ToolTip>Ersetzen Sie dies durch den Bezeichner der zweiten Abfrage.</ToolTip>
          <Default>bFruits</Default>
        </Literal>
        <Literal>
          <ID>item1</ID>
          <Type>item</Type>
          <ToolTip>Ersetzen Sie dies durch den Bezeichner der ersten Variablen, die ein Element aus der Datenquelle darstellt.</ToolTip>
          <Default>fruit</Default>
        </Literal>
        <Literal>
          <ID>item2</ID>
          <Type>item</Type>
          <ToolTip>Ersetzen Sie dies durch den Bezeichner der zweiten Variablen, die ein Element aus der Datenquelle darstellt.</ToolTip>
          <Default>fruitName</Default>
        </Literal>       
        <Literal>
          <ID>dataSource</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch den Bezeichner der Datenquelle.</ToolTip>
          <Default>New String() {"apple", "orange", "pear", "banana", "strawberry", "blueberry"}</Default>
        </Literal>
        <Literal>
          <ID>filterfield1</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch das erste Feld, nach dem die erste Quelle gefiltert werden soll.</ToolTip>
          <Default>Length</Default>
        </Literal>
        <Literal>
          <ID>filterCondition1</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch die Bedingung, die als erster Filter verwendet wird.</ToolTip>
          <Default>&gt;= 6</Default>
        </Literal>
	      <Literal>
          <ID>filterfield2</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch das Feld, nach dem die zweite Quelle gefiltert werden soll.</ToolTip>
          <Default>ToLower.SubString(0,1)</Default>
        </Literal>
        <Literal>
          <ID>filterCondition2</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch die Bedingung, die als zweiter Filter verwendet wird.</ToolTip>
          <Default>= "b"</Default>
        </Literal>
        <Literal>
          <ID>field1</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch das erste Feld, das aus der ersten Datenquelle abgerufen werden soll.</ToolTip>
          <Default>ToLower()</Default>
        </Literal>
        <Literal>
          <ID>field2</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch das zweite Feld, das aus der ersten Datenquelle abgerufen werden soll.</ToolTip>
          <Default>Length</Default>
        </Literal>
        <Literal>
          <ID>field3</ID>
          <Type>String</Type>
          <ToolTip>Ersetzen Sie dies durch das Feld, das aus der zweiten Datenquelle abgerufen werden soll.</ToolTip>
          <Default>ToLower</Default>
        </Literal>
      </Declarations>
      <Code Language="VB" Kind="method body"><![CDATA[Dim $queryResult1$ = From $item1$ In $dataSource$ _
                             Where $item1$.$filterField1$ $filterCondition1$ _
                             Select $item1$.$field1$, $item1$.$field2$

        Dim $queryResult2$ = From $item2$ In $queryResult1$ _
                     Where $item2$.$filterfield2$ $filterCondition2$ _
                     Select $item2$.$field3$]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
