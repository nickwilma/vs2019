{
    "hdf5": { "name": "hdf5", "targets": ["hdf5::hdf5-shared", "hdf5::hdf5_cpp-shared", "hdf5::hdf5_cpp-static", "hdf5::hdf5_hl-shared", "hdf5::hdf5_hl_cpp-shared", "hdf5::hdf5_hl_cpp-static"], "portName": "hdf5", "portDescription": "HDF5 is a data model, library, and file format for storing and managing data", "description": "The package hdf5 provides CMake targets:\r\n\r\n    find_package(hdf5 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE hdf5::hdf5-shared hdf5::hdf5_cpp-shared hdf5::hdf5_cpp-static hdf5::hdf5_hl-shared hdf5::hdf5_hl_cpp-shared hdf5::hdf5_hl_cpp-static)\r\n" },
    "fizz": { "name": "fizz", "targets": ["fizz::fizz"], "portName": "fizz", "portDescription": "a TLS 1.3 implementation by Facebook", "description": "The package fizz provides CMake targets:\r\n\r\n    find_package(fizz CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE fizz::fizz)\r\n" },
    "PNG": { "name": "PNG", "targets": [""], "portName": "libpng", "portDescription": "libpng is a library implementing an interface for reading and writing PNG (Portable Network Graphics) format files.", "description": "The package libpng is compatible with built-in CMake targets:\r\n\r\n    find_package(PNG REQUIRED)\r\n    target_link_libraries(main PRIVATE PNG::PNG)\r\n" },
    "unofficial-gettext": { "name": "unofficial-gettext", "targets": ["unofficial::gettext::libintl"], "portName": "gettext", "portDescription": "The GNU gettext utilities are a set of tools that provides a framework to help other GNU packages produce multi-lingual messages. Provides libintl.", "description": "The package gettext provides CMake targets:\r\n\r\n    find_package(unofficial-gettext CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::gettext::libintl)\r\n" },
    "tinyxml2": { "name": "tinyxml2", "targets": ["tinyxml2::tinyxml2"], "portName": "tinyxml2", "portDescription": "A simple, small, efficient, C++ XML parser", "description": "The package tinyxml2 provides CMake targets:\r\n\r\n    find_package(tinyxml2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tinyxml2::tinyxml2)\r\n" },
    "range-v3": { "name": "range-v3", "targets": ["meta", "range-v3"], "portName": "range-v3", "portDescription": "Range library for C++11/14/17.", "description": "The package range-v3 provides CMake targets:\r\n\r\n    find_package(range-v3 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE meta range-v3)\r\n" },
    "szip": { "name": "szip", "targets": ["szip-shared"], "portName": "szip", "portDescription": "Szip compression software, providing lossless compression of scientific data", "description": "The package szip provides CMake targets:\r\n\r\n    find_package(szip CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE szip-shared)\r\n" },
    "nanodbc": { "name": "nanodbc", "targets": ["nanodbc"], "portName": "nanodbc", "portDescription": "A small C++ wrapper for the native C ODBC API.", "description": "The package nanodbc provides CMake targets:\r\n\r\n    find_package(nanodbc CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE nanodbc)\r\n" },
    "TGUI": { "name": "TGUI", "targets": ["tgui"], "portName": "tgui", "portDescription": "TGUI is an easy to use, cross-platform, C++ GUI for SFML.", "description": "The package tgui provides CMake targets:\r\n\r\n    find_package(TGUI CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tgui)\r\n" },
    "DCMTK": { "name": "DCMTK", "targets": ["charls", "cmr", "dcmdata", "dcmdsig", "dcmfg", "dcmimage", "dcmimgle", "dcmiod", "dcmjpeg", "dcmjpls", "dcmnet", "dcmpmap", "dcmpstat", "dcmqrdb", "dcmrt", "dcmseg", "dcmsr", "dcmtls", "dcmtract", "dcmwlm", "i2d", "ijg12", "ijg16", "ijg8", "oflog", "ofstd"], "portName": "dcmtk", "portDescription": "This DICOM ToolKit (DCMTK) package consists of source code, documentation and installation instructions for a set of software libraries and applications implementing part of the DICOM/MEDICOM Standard.", "description": "The package dcmtk provides CMake targets:\r\n\r\n    find_package(DCMTK CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE charls cmr dcmdata dcmdsig dcmfg dcmimage dcmimgle dcmiod dcmjpeg dcmjpls dcmnet dcmpmap dcmpstat dcmqrdb dcmrt dcmseg dcmsr dcmtls dcmtract dcmwlm i2d ijg12 ijg16 ijg8 oflog ofstd)\r\n" },
    "glfw3": { "name": "glfw3", "targets": ["glfw"], "portName": "glfw3", "portDescription": "GLFW is a free, Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan application development. It provides a simple, platform-independent API for creating windows, contexts and surfaces, reading input, handling events, etc.", "description": "The package glfw3 provides CMake targets:\r\n\r\n    find_package(glfw3 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE glfw)\r\n" },
    "HPX": { "name": "HPX", "targets": ["${name}_component", "${name}_lib", "component_storage_component", "hpx", "hpx_init", "iostreams_component", "memory_component", "parcel_coalescing_lib", "partitioned_vector_component", "process_component", "unordered_component"], "portName": "hpx", "portDescription": "The C++ Standards Library for Concurrency and Parallelism \n  HPX is a C++ Standards Library for Concurrency and Parallelism. It implements all of the corresponding facilities as defined by the C++ Standard. Additionally, in HPX we implement functionalities proposed as part of the ongoing C++ standardization process. We also extend the C++ Standard APIs to the distributed case.", "description": "The package hpx provides CMake targets:\r\n\r\n    find_package(HPX CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${name}_component ${name}_lib component_storage_component hpx hpx_init iostreams_component memory_component parcel_coalescing_lib partitioned_vector_component process_component unordered_component)\r\n" },
    "SystemCLanguage": { "name": "SystemCLanguage", "targets": ["SystemC::systemc"], "portName": "systemc", "portDescription": "A set of C++ classes and macros which provide an event-driven simulation kernel in C++", "description": "The package systemc provides CMake targets:\r\n\r\n    find_package(SystemCLanguage CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE SystemC::systemc)\r\n" },
    "exiv2": { "name": "exiv2", "targets": ["exiv2lib", "xmp"], "portName": "exiv2", "portDescription": "Image metadata library and tools http://www.exiv2.org", "description": "The package exiv2 provides CMake targets:\r\n\r\n    find_package(exiv2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE exiv2lib xmp)\r\n" },
    "unofficial-libuv": { "name": "unofficial-libuv", "targets": ["unofficial::libuv::libuv"], "portName": "libuv", "portDescription": "libuv is a multi-platform support library with a focus on asynchronous I/O.", "description": "The package libuv provides CMake targets:\r\n\r\n    find_package(unofficial-libuv CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::libuv::libuv)\r\n" },
    "spirv_cross_core": { "name": "spirv_cross_core", "targets": ["spirv-cross-core"], "portName": "spirv-cross", "portDescription": "SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.", "description": "The package spirv-cross provides CMake targets:\r\n\r\n    find_package(spirv_cross_core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spirv-cross-core)\r\n" },
    "spirv_cross_cpp": { "name": "spirv_cross_cpp", "targets": ["spirv-cross-cpp"], "portName": "spirv-cross", "portDescription": "SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.", "description": "The package spirv-cross provides CMake targets:\r\n\r\n    find_package(spirv_cross_core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spirv-cross-core)\r\n" },
    "spirv_cross_glsl": { "name": "spirv_cross_glsl", "targets": ["spirv-cross-glsl"], "portName": "spirv-cross", "portDescription": "SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.", "description": "The package spirv-cross provides CMake targets:\r\n\r\n    find_package(spirv_cross_core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spirv-cross-core)\r\n" },
    "spirv_cross_hlsl": { "name": "spirv_cross_hlsl", "targets": ["spirv-cross-hlsl"], "portName": "spirv-cross", "portDescription": "SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.", "description": "The package spirv-cross provides CMake targets:\r\n\r\n    find_package(spirv_cross_core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spirv-cross-core)\r\n" },
    "spirv_cross_msl": { "name": "spirv_cross_msl", "targets": ["spirv-cross-msl"], "portName": "spirv-cross", "portDescription": "SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.", "description": "The package spirv-cross provides CMake targets:\r\n\r\n    find_package(spirv_cross_core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spirv-cross-core)\r\n" },
    "spirv_cross_reflect": { "name": "spirv_cross_reflect", "targets": ["spirv-cross-reflect"], "portName": "spirv-cross", "portDescription": "SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.", "description": "The package spirv-cross provides CMake targets:\r\n\r\n    find_package(spirv_cross_core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spirv-cross-core)\r\n" },
    "spirv_cross_util": { "name": "spirv_cross_util", "targets": ["spirv-cross-util"], "portName": "spirv-cross", "portDescription": "SPIRV-Cross is a practical tool and library for performing reflection on SPIR-V and disassembling SPIR-V back to high level languages.", "description": "The package spirv-cross provides CMake targets:\r\n\r\n    find_package(spirv_cross_core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spirv-cross-core)\r\n" },
    "unofficial-rapidstring": { "name": "unofficial-rapidstring", "targets": ["unofficial::rapidstring::rapidstring"], "portName": "rapidstring", "portDescription": "rapidstring is maybe the fastest string library ever written in ANSI C.", "description": "The package rapidstring provides CMake targets:\r\n\r\n    find_package(unofficial-rapidstring CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::rapidstring::rapidstring)\r\n" },
    "irrlicht": { "name": "irrlicht", "targets": ["Irrlicht"], "portName": "irrlicht", "portDescription": "Irrlicht lightning fast 3d engine", "description": "The package irrlicht provides CMake targets:\r\n\r\n    find_package(irrlicht CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Irrlicht)\r\n" },
    "OGRE": { "name": "OGRE", "targets": ["OgreBites", "OgreGLSupport", "OgreHLMS", "OgreMain", "OgreMeshLodGenerator", "OgreOverlay", "OgrePaging", "OgreProperty", "OgreRTShaderSystem", "OgreTerrain", "OgreVolume"], "portName": "ogre", "portDescription": "3D Object-Oriented Graphics Rendering Engine", "description": "The package ogre provides CMake targets:\r\n\r\n    find_package(OGRE CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE OgreBites OgreGLSupport OgreHLMS OgreMain OgreMeshLodGenerator OgreOverlay OgrePaging OgreProperty OgreRTShaderSystem OgreTerrain OgreVolume)\r\n" },
    "Qt5Purchasing": { "name": "Qt5Purchasing", "targets": ["Qt5::Purchasing", "Qt5::PurchasingPrivate"], "portName": "qt5-purchasing", "portDescription": "Qt5 Purchasing Module - Enables in-app purchase of products in Qt applications.", "description": "The package qt5-purchasing provides CMake targets:\r\n\r\n    find_package(Qt5Purchasing CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Purchasing Qt5::PurchasingPrivate)\r\n" },
    "TinyEXIF": { "name": "TinyEXIF", "targets": ["TinyEXIF"], "portName": "tinyexif", "portDescription": "tiny ISO-compliant C++ EXIF and XMP parsing library for JPEG images", "description": "The package tinyexif provides CMake targets:\r\n\r\n    find_package(TinyEXIF CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE TinyEXIF)\r\n" },
    "Cutelyst2Qt5": { "name": "Cutelyst2Qt5", "targets": ["Cutelyst::Authentication", "Cutelyst::Core", "Cutelyst::Session", "Cutelyst::StaticSimple", "Cutelyst::StatusMessage", "Cutelyst::Utils::LangSelect", "Cutelyst::Utils::Pagination", "Cutelyst::Utils::Sql", "Cutelyst::Utils::Validator", "Cutelyst::View::JSON", "Cutelyst::WSGI"], "portName": "cutelyst2", "portDescription": "A C++ Web Framework built on top of Qt, using the simple approach of Catalyst (Perl) framework", "description": "The package cutelyst2 provides CMake targets:\r\n\r\n    find_package(Cutelyst2Qt5 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Cutelyst::Authentication Cutelyst::Core Cutelyst::Session Cutelyst::StaticSimple Cutelyst::StatusMessage Cutelyst::Utils::LangSelect Cutelyst::Utils::Pagination Cutelyst::Utils::Sql Cutelyst::Utils::Validator Cutelyst::View::JSON Cutelyst::WSGI)\r\n" },
    "CoinUtils": { "name": "CoinUtils", "targets": ["Coin::CoinUtils"], "portName": "coinutils", "portDescription": "CoinUtils (Coin-or Utilities) is an open-source collection of classes and functions that are generally useful to more than one COIN-OR project", "description": "The package coinutils provides CMake targets:\r\n\r\n    find_package(CoinUtils CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Coin::CoinUtils)\r\n" },
    "RocksDB": { "name": "RocksDB", "targets": ["RocksDB::rocksdb", "RocksDB::rocksdb-shared", "RocksDB::rocksdb-shared"], "portName": "rocksdb", "portDescription": "A library that provides an embeddable, persistent key-value store for fast storage", "description": "The package rocksdb provides CMake targets:\r\n\r\n    find_package(RocksDB CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE RocksDB::rocksdb RocksDB::rocksdb-shared RocksDB::rocksdb-shared)\r\n" },
    "CLI11": { "name": "CLI11", "targets": ["CLI11::CLI11"], "portName": "cli11", "portDescription": "CLI11 is a command line parser for C++11 and beyond that provides a rich feature set with a simple and intuitive interface. <https://github.com/CLIUtils/CLI11>", "description": "The package cli11 provides CMake targets:\r\n\r\n    find_package(CLI11 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE CLI11::CLI11)\r\n" },
    "FreeRDP-Client2": { "name": "FreeRDP-Client2", "targets": ["freerdp-client"], "portName": "freerdp", "portDescription": "A free implementation of the Remote Desktop Protocol (RDP)", "description": "The package freerdp provides CMake targets:\r\n\r\n    find_package(FreeRDP-Client2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE freerdp-client)\r\n" },
    "FreeRDP2": { "name": "FreeRDP2", "targets": ["freerdp"], "portName": "freerdp", "portDescription": "A free implementation of the Remote Desktop Protocol (RDP)", "description": "The package freerdp provides CMake targets:\r\n\r\n    find_package(FreeRDP-Client2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE freerdp-client)\r\n" },
    "WinPR2": { "name": "WinPR2", "targets": ["winpr", "winpr-tools"], "portName": "freerdp", "portDescription": "A free implementation of the Remote Desktop Protocol (RDP)", "description": "The package freerdp provides CMake targets:\r\n\r\n    find_package(FreeRDP-Client2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE freerdp-client)\r\n" },
    "clFFT": { "name": "clFFT", "targets": ["clFFT"], "portName": "clfft", "portDescription": "clFFT is an OpenCL 1.2 accelerated Fast Fourier Transform library.", "description": "The package clfft provides CMake targets:\r\n\r\n    find_package(clFFT CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE clFFT)\r\n" },
    "yaml-cpp": { "name": "yaml-cpp", "targets": ["yaml-cpp"], "portName": "yaml-cpp", "portDescription": "yaml-cpp is a YAML parser and emitter in C++ matching the YAML 1.2 spec.", "description": "The package yaml-cpp provides CMake targets:\r\n\r\n    find_package(yaml-cpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE yaml-cpp)\r\n" },
    "RapidJSON": { "name": "RapidJSON", "targets": [""], "portName": "rapidjson", "portDescription": "A fast JSON parser/generator for C++ with both SAX/DOM style API <http://rapidjson.org/>", "description": "The package rapidjson provides CMake integration:\r\n\r\n    find_package(RapidJSON CONFIG REQUIRED)\r\n    target_include_directories(main PRIVATE ${RAPIDJSON_INCLUDE_DIRS})\r\n" },
    "rttr": { "name": "rttr", "targets": ["RTTR::Core"], "portName": "rttr", "portDescription": "an easy and intuitive way to use reflection in C++", "description": "The package rttr provides CMake targets:\r\n\r\n    find_package(rttr CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE RTTR::Core)\r\n" },
    "Libcopp": { "name": "Libcopp", "targets": [""], "portName": "libcopp", "portDescription": "A cross-platfrom coroutine library for C++", "description": "The package libcopp provides CMake integration:\r\n\r\n    find_package(Libcopp CONFIG REQUIRED)\r\n    target_include_directories(main PRIVATE ${Libcopp_INCLUDE_DIRS})\r\n    target_link_libraries(main PRIVATE ${Libcotask_LIBRARIES} ${Libcopp_LIBRARIES})\r\n" },
    "pugixml": { "name": "pugixml", "targets": ["pugixml"], "portName": "pugixml", "portDescription": "C++ XML processing library", "description": "The package pugixml provides CMake targets:\r\n\r\n    find_package(pugixml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE pugixml)\r\n" },
    "unofficial-fontconfig": { "name": "unofficial-fontconfig", "targets": ["unofficial::fontconfig::fontconfig"], "portName": "fontconfig", "portDescription": "Library for configuring and customizing font access.", "description": "The package fontconfig provides CMake targets:\r\n\r\n    find_package(unofficial-fontconfig CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::fontconfig::fontconfig)\r\n" },
    "CGAL": { "name": "CGAL", "targets": ["${cgal_lib}", "CGAL::${cgal_lib}", "CGAL::CGAL_Qt5_moc_and_resources", "CGAL::Qt5_moc_and_resources", "CGAL_Qt5_moc_and_resources"], "portName": "cgal", "portDescription": "The Computational Geometry Algorithms Library (CGAL) is a C++ library that aims to provide easy access to efficient and reliable algorithms in computational geometry.", "description": "The package cgal provides CMake targets:\r\n\r\n    find_package(CGAL CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${cgal_lib} CGAL::${cgal_lib} CGAL::CGAL_Qt5_moc_and_resources CGAL::Qt5_moc_and_resources CGAL_Qt5_moc_and_resources)\r\n" },
    "Matroska": { "name": "Matroska", "targets": ["matroska"], "portName": "matroska", "portDescription": "a C++ libary to parse Matroska files (.mkv and .mka)", "description": "The package matroska provides CMake targets:\r\n\r\n    find_package(Matroska CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE matroska)\r\n" },
    "BZip2": { "name": "BZip2", "targets": [""], "portName": "bzip2", "portDescription": "High-quality data compressor.", "description": "The package bzip2 is compatible with built-in CMake targets:\r\n\r\n    find_package(BZip2 REQUIRED)\r\n    target_link_libraries(main PRIVATE BZip2::BZip2)\r\n" },
    "sobjectizer": { "name": "sobjectizer", "targets": ["sobjectizer::SharedLib"], "portName": "sobjectizer", "portDescription": "SObjectizer is a C++ in-process message dispatching framework with implementation of Actor Model, Publish-Subscribe Model and CSP-like channels.", "description": "The package sobjectizer provides CMake targets:\r\n\r\n    find_package(sobjectizer CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE sobjectizer::SharedLib)\r\n" },
    "OpenBLAS": { "name": "OpenBLAS", "targets": ["OpenBLAS::OpenBLAS"], "portName": "openblas", "portDescription": "OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.", "description": "The package openblas provides CMake targets:\r\n\r\n    find_package(OpenBLAS CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE OpenBLAS::OpenBLAS)\r\n" },
    "Flatbuffers": { "name": "Flatbuffers", "targets": ["flatbuffers::flatbuffers"], "portName": "flatbuffers", "portDescription": "Memory Efficient Serialization Library http://google.github.io/flatbuffers/\n  FlatBuffers is an efficient cross platform serialization library for games and other memory constrained apps. It allows you to directly access serialized data without unpacking/parsing it first, while still having great forwards/backwards compatibility.", "description": "The package flatbuffers provides CMake targets:\r\n\r\n    find_package(Flatbuffers CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE flatbuffers::flatbuffers)\r\n" },
    "Catch2": { "name": "Catch2", "targets": ["Catch2::Catch2"], "portName": "catch2", "portDescription": "A modern, header-only test framework for unit testing.\n  Issues, PRs and changelogs can be found at https://github.com/catchorg/Catch2", "description": "The package catch2 provides CMake targets:\r\n\r\n    find_package(Catch2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Catch2::Catch2)\r\n" },
    "xtensor": { "name": "xtensor", "targets": ["xtensor"], "portName": "xtensor", "portDescription": "C++ tensors with broadcasting and lazy computing", "description": "The package xtensor provides CMake targets:\r\n\r\n    find_package(xtensor CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE xtensor)\r\n" },
    "odb": { "name": "odb", "targets": ["odb::libodb"], "portName": "libodb", "portDescription": "ODB library, base runtime for the ODB ORM solution", "description": "The package libodb provides CMake targets:\r\n\r\n    find_package(odb CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE odb::libodb)\r\n" },
    "Ebml": { "name": "Ebml", "targets": ["ebml"], "portName": "ebml", "portDescription": "a C++ libary to parse EBML files", "description": "The package ebml provides CMake targets:\r\n\r\n    find_package(Ebml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ebml)\r\n" },
    "orocos_kdl": { "name": "orocos_kdl", "targets": ["orocos-kdl"], "portName": "orocos-kdl", "portDescription": "Kinematics and Dynamics Library", "description": "The package orocos-kdl provides CMake targets:\r\n\r\n    find_package(orocos_kdl CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE orocos-kdl)\r\n" },
    "rpclib": { "name": "rpclib", "targets": ["rpclib::rpc"], "portName": "rpclib", "portDescription": "a RPC library for C++, providing both a client and server implementation. It is built using modern C++14.", "description": "The package rpclib provides CMake targets:\r\n\r\n    find_package(rpclib CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE rpclib::rpc)\r\n" },
    "OpenSSL": { "name": "OpenSSL", "targets": [""], "portName": "openssl", "portDescription": "OpenSSL is an open source project that provides a robust, commercial-grade, and full-featured toolkit for the Transport Layer Security (TLS) and Secure Sockets Layer (SSL) protocols. It is also a general-purpose cryptography library.", "description": "The package openssl is compatible with built-in CMake targets:\r\n\r\n    find_package(OpenSSL REQUIRED)\r\n    target_link_libraries(main PRIVATE OpenSSL::SSL OpenSSL::Crypto)\r\n" },
    "Qt5WebView": { "name": "Qt5WebView", "targets": ["Qt5::WebView", "Qt5::WebViewPrivate"], "portName": "qt5-webview", "portDescription": "Qt5 WebView module - Provides a way to display web content in a QML application without necessarily including a full web browser stack by using native APIs where it makes sense.", "description": "The package qt5-webview provides CMake targets:\r\n\r\n    find_package(Qt5WebView CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::WebView Qt5::WebViewPrivate)\r\n" },
    "cmark": { "name": "cmark", "targets": ["libcmark"], "portName": "cmark", "portDescription": "CommonMark parsing and rendering library", "description": "The package cmark provides CMake targets:\r\n\r\n    find_package(cmark CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE libcmark)\r\n" },
    "Qt5Gamepad": { "name": "Qt5Gamepad", "targets": ["Qt5::Gamepad", "Qt5::GamepadPrivate", "Qt5::QXInputGamepadBackendPlugin"], "portName": "qt5-gamepad", "portDescription": "Qt5 Gamepad Module - Enables Qt applications to support the use of gamepad hardware", "description": "The package qt5-gamepad provides CMake targets:\r\n\r\n    find_package(Qt5Gamepad CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Gamepad Qt5::GamepadPrivate Qt5::QXInputGamepadBackendPlugin)\r\n" },
    "Jansson": { "name": "Jansson", "targets": ["jansson"], "portName": "jansson", "portDescription": "Jansson is a C library for encoding, decoding and manipulating JSON data", "description": "The package jansson provides CMake targets:\r\n\r\n    find_package(Jansson CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE jansson)\r\n" },
    "unofficial-abseil": { "name": "unofficial-abseil", "targets": ["unofficial::abseil::algorithm", "unofficial::abseil::base", "unofficial::abseil::container", "unofficial::abseil::debugging", "unofficial::abseil::hash", "unofficial::abseil::memory", "unofficial::abseil::meta", "unofficial::abseil::numeric", "unofficial::abseil::strings", "unofficial::abseil::synchronization", "unofficial::abseil::time", "unofficial::abseil::types", "unofficial::abseil::utility"], "portName": "abseil", "portDescription": "an open-source collection designed to augment the C++ standard library.\n  Abseil is an open-source collection of C++ library code designed to augment the C++ standard library. The Abseil library code is collected from Google's own C++ code base, has been extensively tested and used in production, and is the same code we depend on in our daily coding lives.\n  In some cases, Abseil provides pieces missing from the C++ standard; in others, Abseil provides alternatives to the standard for special needs we've found through usage in the Google code base. We denote those cases clearly within the library code we provide you.\n  Abseil is not meant to be a competitor to the standard library; we've just found that many of these utilities serve a purpose within our code base, and we now want to provide those resources to the C++ community as a whole.", "description": "The package abseil provides CMake targets:\r\n\r\n    find_package(unofficial-abseil CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::abseil::algorithm unofficial::abseil::base unofficial::abseil::container unofficial::abseil::debugging unofficial::abseil::hash unofficial::abseil::memory unofficial::abseil::meta unofficial::abseil::numeric unofficial::abseil::strings unofficial::abseil::synchronization unofficial::abseil::time unofficial::abseil::types unofficial::abseil::utility)\r\n" },
    "ccd": { "name": "ccd", "targets": ["ccd"], "portName": "ccd", "portDescription": "Library for collision detection between two convex shapes", "description": "The package ccd provides CMake targets:\r\n\r\n    find_package(ccd CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ccd)\r\n" },
    "UnitTest++": { "name": "UnitTest++", "targets": ["UnitTest++"], "portName": "unittest-cpp", "portDescription": "A lightweight unit testing framework for C++", "description": "The package unittest-cpp provides CMake targets:\r\n\r\n    find_package(UnitTest++ CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE UnitTest++)\r\n" },
    "TIFF": { "name": "TIFF", "targets": [""], "portName": "tiff", "portDescription": "A library that supports the manipulation of TIFF image files", "description": "The package tiff is compatible with built-in CMake targets:\r\n\r\n    find_package(TIFF REQUIRED)\r\n    target_link_libraries(main PRIVATE TIFF::TIFF)\r\n" },
    "log4cplus": { "name": "log4cplus", "targets": ["log4cplus::log4cplusU"], "portName": "log4cplus", "portDescription": "A simple to use C++ logging API providing thread--safe, flexible, and arbitrarily granular control over log management and configuration", "description": "The package log4cplus provides CMake targets:\r\n\r\n    find_package(log4cplus CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE log4cplus::log4cplusU)\r\n" },
    "gRPC": { "name": "gRPC", "targets": ["gRPC::address_sorting", "gRPC::gpr", "gRPC::grpc", "gRPC::grpc++", "gRPC::grpc++_cronet", "gRPC::grpc++_error_details", "gRPC::grpc++_reflection", "gRPC::grpc++_unsecure", "gRPC::grpc_cronet", "gRPC::grpc_csharp_ext", "gRPC::grpc_plugin_support", "gRPC::grpc_unsecure", "gRPC::grpcpp_channelz"], "portName": "grpc", "portDescription": "An RPC library and framework", "description": "The package grpc provides CMake targets:\r\n\r\n    find_package(gRPC CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE gRPC::address_sorting gRPC::gpr gRPC::grpc gRPC::grpc++ gRPC::grpc++_cronet gRPC::grpc++_error_details gRPC::grpc++_reflection gRPC::grpc++_unsecure gRPC::grpc_cronet gRPC::grpc_csharp_ext gRPC::grpc_plugin_support gRPC::grpc_unsecure gRPC::grpcpp_channelz)\r\n" },
    "geotiff": { "name": "geotiff", "targets": ["geotiff_library"], "portName": "libgeotiff", "portDescription": "Libgeotiff is an open source library normally hosted on top of ​libtiff for reading, and writing GeoTIFF information tags.", "description": "The package libgeotiff provides CMake targets:\r\n\r\n    find_package(geotiff CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE geotiff_library)\r\n" },
    "Ponder": { "name": "Ponder", "targets": ["ponder::ponder"], "portName": "ponder", "portDescription": "A C++ multi-purpose reflection library.", "description": "The package ponder provides CMake targets:\r\n\r\n    find_package(Ponder CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ponder::ponder)\r\n" },
    "LibKML": { "name": "LibKML", "targets": ["kmlbase", "kmlconvenience", "kmldom", "kmlengine", "kmlregionator", "kmlxsd"], "portName": "libkml", "portDescription": "Reference implementation of OGC KML 2.2", "description": "The package libkml provides CMake targets:\r\n\r\n    find_package(LibKML CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE kmlbase kmlconvenience kmldom kmlengine kmlregionator kmlxsd)\r\n" },
    "unofficial-libui": { "name": "unofficial-libui", "targets": ["unofficial::libui::libui"], "portName": "libui", "portDescription": "Simple and portable (but not inflexible) native GUI library in C.", "description": "The package libui provides CMake targets:\r\n\r\n    find_package(unofficial-libui CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::libui::libui)\r\n" },
    "SFML": { "name": "SFML", "targets": ["FLAC", "Freetype", "OpenAL", "OpenGL", "Vorbis", "sfml-audio", "sfml-graphics", "sfml-main", "sfml-network", "sfml-system", "sfml-window"], "portName": "sfml", "portDescription": "Simple and fast multimedia library", "description": "The package sfml provides CMake targets:\r\n\r\n    find_package(SFML CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE FLAC Freetype OpenAL OpenGL Vorbis sfml-audio sfml-graphics sfml-main sfml-network sfml-system sfml-window)\r\n" },
    "Snappy": { "name": "Snappy", "targets": ["Snappy::snappy"], "portName": "snappy", "portDescription": "A fast compressor/decompressor.", "description": "The package snappy provides CMake targets:\r\n\r\n    find_package(Snappy CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Snappy::snappy)\r\n" },
    "msgpack": { "name": "msgpack", "targets": ["msgpackc", "msgpackc"], "portName": "msgpack", "portDescription": "MessagePack is an efficient binary serialization format, which lets you exchange data among multiple languages like JSON, except that it's faster and smaller.", "description": "The package msgpack provides CMake targets:\r\n\r\n    find_package(msgpack CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE msgpackc msgpackc)\r\n" },
    "SDL2": { "name": "SDL2", "targets": ["SDL2::SDL2", "SDL2::SDL2main"], "portName": "sdl2", "portDescription": "Simple DirectMedia Layer is a cross-platform development library designed to provide low level access to audio, keyboard, mouse, joystick, and graphics hardware via OpenGL and Direct3D.", "description": "The package sdl2 provides CMake targets:\r\n\r\n    find_package(SDL2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE SDL2::SDL2 SDL2::SDL2main)\r\n" },
    "zxing": { "name": "zxing", "targets": ["zxing::libzxing"], "portName": "zxing-cpp", "portDescription": "Barcode detection and decoding library.", "description": "The package zxing-cpp provides CMake targets:\r\n\r\n    find_package(zxing CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE zxing::libzxing)\r\n" },
    "unofficial-graphicsmagick": { "name": "unofficial-graphicsmagick", "targets": ["unofficial::graphicsmagick::graphicsmagick"], "portName": "graphicsmagick", "portDescription": "Image processing library", "description": "The package graphicsmagick provides CMake targets:\r\n\r\n    find_package(unofficial-graphicsmagick CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::graphicsmagick::graphicsmagick)\r\n" },
    "nng": { "name": "nng", "targets": ["nng::nng"], "portName": "nng", "portDescription": "NNG, like its predecessors nanomsg (and to some extent ZeroMQ), is a lightweight, broker-less library, offering a simple API to solve common recurring messaging problems, such as publish/subscribe, RPC-style request/reply, or service discovery.", "description": "The package nng provides CMake targets:\r\n\r\n    find_package(nng CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE nng::nng)\r\n" },
    "SOIL": { "name": "SOIL", "targets": ["SOIL"], "portName": "soil", "portDescription": "Simple OpenGL Image Library", "description": "The package soil provides CMake targets:\r\n\r\n    find_package(SOIL CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE SOIL)\r\n" },
    "MiniSat": { "name": "MiniSat", "targets": ["MiniSat::libminisat"], "portName": "minisat-master-keying", "portDescription": "A minimalistic high-performance SAT solver\n  This is a modernized, cross-platform, CMake-enabled fork of the\n  original MiniSat. Since the original library is no longer under\n  development, post issues and pull requests should be posted to\n  https://github.com/master-keying/minisat", "description": "The package minisat-master-keying provides CMake targets:\r\n\r\n    find_package(MiniSat CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE MiniSat::libminisat)\r\n" },
    "unofficial-libstk": { "name": "unofficial-libstk", "targets": ["unofficial::libstk::libstk"], "portName": "libstk", "portDescription": "The Synthesis ToolKit in C++ (STK) is a set of open source audio signal processing and algorithmic synthesis classes written in the C++ programming language. ", "description": "The package libstk provides CMake targets:\r\n\r\n    find_package(unofficial-libstk CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::libstk::libstk)\r\n" },
    "PDAL": { "name": "PDAL", "targets": ["pdal_arbiter", "pdal_boost", "pdal_kazhdan", "pdal_util", "pdalcpp"], "portName": "pdal", "portDescription": "PDAL - Point Data Abstraction Library is a library for manipulating point cloud data.", "description": "The package pdal provides CMake targets:\r\n\r\n    find_package(PDAL CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE pdal_arbiter pdal_boost pdal_kazhdan pdal_util pdalcpp)\r\n" },
    "Forge": { "name": "Forge", "targets": ["Forge::forge", "Forge::forge"], "portName": "forge", "portDescription": "Helps with high performance visulizations involving OpenGL-CUDA/OpenCL interop.", "description": "The package forge provides CMake targets:\r\n\r\n    find_package(Forge CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Forge::forge Forge::forge)\r\n" },
    "so5extra": { "name": "so5extra", "targets": ["sobjectizer::so5extra"], "portName": "so5extra", "portDescription": "A set of additional tools for SObjectizer framework.", "description": "The package so5extra provides CMake targets:\r\n\r\n    find_package(so5extra CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE sobjectizer::so5extra)\r\n" },
    "jpeg": { "name": "jpeg", "targets": ["JPEG::JPEG"], "portName": "libjpeg-turbo", "portDescription": "libjpeg-turbo is a JPEG image codec that uses SIMD instructions (MMX, SSE2, NEON, AltiVec) to accelerate baseline JPEG compression and decompression on x86, x86-64, ARM, and PowerPC systems.", "description": "The package libjpeg-turbo is compatible with built-in CMake targets:\r\n\r\n    find_package(JPEG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${JPEG_LIBRARIES})\r\n    target_include_directories(main PRIVATE ${JPEG_INCLUDE_DIR})\r\n" },
    "Qt5Charts": { "name": "Qt5Charts", "targets": ["Qt5::Charts", "Qt5::ChartsPrivate"], "portName": "qt5-charts", "portDescription": "Qt5 Charts Module - UI components for displaying charts, driven by static or dynamic data models", "description": "The package qt5-charts provides CMake targets:\r\n\r\n    find_package(Qt5Charts CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Charts Qt5::ChartsPrivate)\r\n" },
    "Geogram": { "name": "Geogram", "targets": ["Geogram::geogram"], "portName": "geogram", "portDescription": "Geogram is a programming library of geometric algorithms.", "description": "The package geogram provides CMake targets:\r\n\r\n    find_package(Geogram CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Geogram::geogram)\r\n" },
    "Qt5Script": { "name": "Qt5Script", "targets": ["Qt5::Script", "Qt5::ScriptPrivate"], "portName": "qt5-script", "portDescription": "Qt5 Script Module.", "description": "The package qt5-script provides CMake targets:\r\n\r\n    find_package(Qt5Script CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Script Qt5::ScriptPrivate)\r\n" },
    "Qt5ScriptTools": { "name": "Qt5ScriptTools", "targets": ["Qt5::ScriptTools", "Qt5::ScriptToolsPrivate"], "portName": "qt5-script", "portDescription": "Qt5 Script Module.", "description": "The package qt5-script provides CMake targets:\r\n\r\n    find_package(Qt5Script CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Script Qt5::ScriptPrivate)\r\n" },
    "trompeloeil": { "name": "trompeloeil", "targets": ["trompeloeil"], "portName": "trompeloeil", "portDescription": "A thread-safe header-only mocking framework for C++11/14 using the Boost Software License 1.0\n    For issues/pull requests/questions visit https://github.com/rollbear/trompeloeil", "description": "The package trompeloeil provides CMake targets:\r\n\r\n    find_package(trompeloeil CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE trompeloeil)\r\n" },
    "realsense2": { "name": "realsense2", "targets": ["realsense2::realsense-file", "realsense2::realsense2"], "portName": "realsense2", "portDescription": "Intel® RealSense™ SDK 2.0 is a cross-platform library for Intel® RealSense™ depth cameras (D400 series and the SR300).", "description": "The package realsense2 provides CMake targets:\r\n\r\n    find_package(realsense2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE realsense2::realsense-file realsense2::realsense2)\r\n" },
    "LibXml2": { "name": "LibXml2", "targets": [""], "portName": "libxml2", "portDescription": "Libxml2 is the XML C parser and toolkit developed for the Gnome project (but usable outside of the Gnome platform)", "description": "The package libxml2 is compatible with built-in CMake targets:\r\n\r\n    find_package(LibXml2 REQUIRED)\r\n    target_include_directories(main PRIVATE ${LIBXML2_INCLUDE_DIR})\r\n    target_link_libraries(main PRIVATE ${LIBXML2_LIBRARIES})\r\n" },
    "odb": { "name": "odb", "targets": ["odb::libodb-sqlite"], "portName": "libodb-sqlite", "portDescription": "Sqlite support for the ODB ORM library", "description": "The package libodb-sqlite provides CMake targets:\r\n\r\n    find_package(odb CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE odb::libodb-sqlite)\r\n" },
    "unofficial-vulkan-memory-allocator": { "name": "unofficial-vulkan-memory-allocator", "targets": ["unofficial::vulkan-memory-allocator::vulkan-memory-allocator"], "portName": "vulkan-memory-allocator", "portDescription": "Easy to integrate Vulkan memory allocation library from GPUOpen", "description": "The package vulkan-memory-allocator provides CMake targets:\r\n\r\n    find_package(unofficial-vulkan-memory-allocator CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::vulkan-memory-allocator::vulkan-memory-allocator)\r\n" },
    "tsl-ordered-map": { "name": "tsl-ordered-map", "targets": ["tsl::ordered_map"], "portName": "tsl-ordered-map", "portDescription": "C++ hash map and hash set which preserve the order of insertion", "description": "The package tsl-ordered-map provides CMake targets:\r\n\r\n    find_package(tsl-ordered-map CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tsl::ordered_map)\r\n" },
    "string_theory": { "name": "string_theory", "targets": ["string_theory"], "portName": "string-theory", "portDescription": "Flexible C++11 string library with type-safe formatting.", "description": "The package string-theory provides CMake targets:\r\n\r\n    find_package(string_theory CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE string_theory)\r\n" },
    "SQLiteCpp": { "name": "SQLiteCpp", "targets": ["SQLiteCpp"], "portName": "sqlitecpp", "portDescription": "SQLiteC++ (SQLiteCpp) is a smart and easy to use C++ SQLite3 wrapper.", "description": "The package sqlitecpp provides CMake targets:\r\n\r\n    find_package(SQLiteCpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE SQLiteCpp)\r\n" },
    "LEMON": { "name": "LEMON", "targets": ["unofficial::lemon::lemon"], "portName": "liblemon", "portDescription": "Library for Efficient Modeling and Optimization in Networks", "description": "The package liblemon provides CMake targets:\r\n\r\n    find_package(LEMON CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::lemon::lemon)\r\n" },
    "Ogg": { "name": "Ogg", "targets": ["Ogg::Ogg"], "portName": "discord-rpc", "portDescription": "Rich Presence allows you to leverage the totally overhauled \"Now Playing\" section in a Discord user's profile to help people play your game together.", "description": "The package discord-rpc provides CMake targets:\r\n\r\n    find_package(Ogg CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Ogg::Ogg)\r\n" },
    "Qt5Concurrent": { "name": "Qt5Concurrent", "targets": ["Qt5::Concurrent", "Qt5::ConcurrentPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5Core": { "name": "Qt5Core", "targets": ["Qt5::Core", "Qt5::CorePrivate", "Qt5::WinMain", "rcc_object_${outfilename}"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5DBus": { "name": "Qt5DBus", "targets": ["Qt5::DBus", "Qt5::DBusPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5Gui": { "name": "Qt5Gui", "targets": ["Qt5::Gui", "Qt5::GuiPrivate", "Qt5::Gui_${_cmake_lib_name}", "Qt5::QGifPlugin", "Qt5::QICOPlugin", "Qt5::QJpegPlugin", "Qt5::QMinimalIntegrationPlugin", "Qt5::QOffscreenIntegrationPlugin", "Qt5::QTuioTouchPlugin", "Qt5::QWindowsDirect2DIntegrationPlugin", "Qt5::QWindowsIntegrationPlugin", "Qt5::QXdgDesktopPortalThemePlugin"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5Network": { "name": "Qt5Network", "targets": ["Qt5::Network", "Qt5::NetworkPrivate", "Qt5::QGenericEnginePlugin"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5OpenGL": { "name": "Qt5OpenGL", "targets": ["Qt5::OpenGL", "Qt5::OpenGLPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5OpenGLExtensions": { "name": "Qt5OpenGLExtensions", "targets": ["Qt5::OpenGLExtensions", "Qt5::OpenGLExtensionsPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5PrintSupport": { "name": "Qt5PrintSupport", "targets": ["Qt5::PrintSupport", "Qt5::PrintSupportPrivate", "Qt5::QWindowsPrinterSupportPlugin"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5Sql": { "name": "Qt5Sql", "targets": ["Qt5::QODBCDriverPlugin", "Qt5::QPSQLDriverPlugin", "Qt5::QSQLiteDriverPlugin", "Qt5::Sql", "Qt5::SqlPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5Test": { "name": "Qt5Test", "targets": ["Qt5::Test", "Qt5::TestPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5Widgets": { "name": "Qt5Widgets", "targets": ["Qt5::QWindowsVistaStylePlugin", "Qt5::Widgets", "Qt5::WidgetsPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5Xml": { "name": "Qt5Xml", "targets": ["Qt5::Xml", "Qt5::XmlPrivate"], "portName": "qt5-base", "portDescription": "Qt5 Application Framework Base Module. Includes Core, GUI, Widgets, Networking, SQL, Concurrent and other essential qt components.", "description": "The package qt5-base provides CMake targets:\r\n\r\n    find_package(Qt5Concurrent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Concurrent Qt5::ConcurrentPrivate)\r\n" },
    "Qt5SerialPort": { "name": "Qt5SerialPort", "targets": ["Qt5::SerialPort", "Qt5::SerialPortPrivate"], "portName": "qt5-serialport", "portDescription": "Qt5 Serial Port - provides access to hardware and virtual serial ports", "description": "The package qt5-serialport provides CMake targets:\r\n\r\n    find_package(Qt5SerialPort CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::SerialPort Qt5::SerialPortPrivate)\r\n" },
    "tsl-sparse-map": { "name": "tsl-sparse-map", "targets": ["tsl::sparse_map"], "portName": "tsl-sparse-map", "portDescription": "C++ implementation of a memory efficient hash map and hash set", "description": "The package tsl-sparse-map provides CMake targets:\r\n\r\n    find_package(tsl-sparse-map CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tsl::sparse_map)\r\n" },
    "cereal": { "name": "cereal", "targets": ["cereal"], "portName": "cereal", "portDescription": "a header-only C++11 serialization library (built in support for binary, XML and JSon)", "description": "The package cereal provides CMake targets:\r\n\r\n    find_package(cereal CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cereal)\r\n" },
    "nlohmann_json": { "name": "nlohmann_json", "targets": ["nlohmann_json", "nlohmann_json::nlohmann_json"], "portName": "nlohmann-json", "portDescription": "JSON for Modern C++", "description": "The package nlohmann-json provides CMake targets:\r\n\r\n    find_package(nlohmann_json CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE nlohmann_json nlohmann_json::nlohmann_json)\r\n" },
    "MagnumIntegration": { "name": "MagnumIntegration", "targets": ["MagnumIntegration::${_component}"], "portName": "magnum-integration", "portDescription": "Integrations for magnum, C++11/C++14 graphics middleware for games and data visualization http://magnum.graphics/", "description": "The package magnum-integration provides CMake targets:\r\n\r\n    find_package(MagnumIntegration CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE MagnumIntegration::${_component})\r\n" },
    "unofficial-cairo": { "name": "unofficial-cairo", "targets": ["unofficial::cairo::cairo", "unofficial::cairo::cairo-gobject"], "portName": "cairo", "portDescription": "Cairo is a 2D graphics library with support for multiple output devices. Currently supported output targets include the X Window System (via both Xlib and XCB), Quartz, Win32, image buffers, PostScript, PDF, and SVG file output. Experimental backends include OpenGL, BeOS, OS/2, and DirectFB.", "description": "The package cairo provides CMake targets:\r\n\r\n    find_package(unofficial-cairo CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::cairo::cairo unofficial::cairo::cairo-gobject)\r\n" },
    "coroutine": { "name": "coroutine", "targets": ["coroutine"], "portName": "coroutine", "portDescription": "C++ coroutine helper/example library", "description": "The package coroutine provides CMake targets:\r\n\r\n    find_package(coroutine CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE coroutine)\r\n" },
    "GDCM": { "name": "GDCM", "targets": ["gdcmCommon", "gdcmDICT", "gdcmDSED", "gdcmIOD", "gdcmMEXD", "gdcmMSFF", "gdcmcharls", "gdcmgetopt", "gdcmjpeg12", "gdcmjpeg16", "gdcmjpeg8", "socketxx"], "portName": "gdcm2", "portDescription": "Grassroots DICOM library", "description": "The package gdcm2 provides CMake targets:\r\n\r\n    find_package(GDCM CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE gdcmCommon gdcmDICT gdcmDSED gdcmIOD gdcmMEXD gdcmMSFF gdcmcharls gdcmgetopt gdcmjpeg12 gdcmjpeg16 gdcmjpeg8 socketxx)\r\n" },
    "Libevent": { "name": "Libevent", "targets": ["event", "event_core", "event_extra"], "portName": "libevent", "portDescription": "An event notification library", "description": "The package libevent provides CMake targets:\r\n\r\n    find_package(Libevent CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE event event_core event_extra)\r\n" },
    "GSL": { "name": "GSL", "targets": [""], "portName": "gsl", "portDescription": "The GNU Scientific Library is a numerical library for C and C++ programmers", "description": "The package gsl is compatible with built-in CMake targets:\r\n\r\n    find_package(GSL REQUIRED)\r\n    target_link_libraries(main PRIVATE GSL::gsl GSL::gslcblas)\r\n" },
    "odb": { "name": "odb", "targets": ["odb::libodb-mysql"], "portName": "libodb-mysql", "portDescription": "MySQL support for the ODB ORM library", "description": "The package libodb-mysql provides CMake targets:\r\n\r\n    find_package(odb CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE odb::libodb-mysql)\r\n" },
    "NLopt": { "name": "NLopt", "targets": ["NLopt::nlopt"], "portName": "nlopt", "portDescription": "a library for nonlinear local and global optimization, for functions with and without gradient information.", "description": "The package nlopt provides CMake targets:\r\n\r\n    find_package(NLopt CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE NLopt::nlopt)\r\n" },
    "nanopb": { "name": "nanopb", "targets": ["nanopb::protobuf-nanopb"], "portName": "nanopb", "portDescription": "A small code-size Protocol Buffers implementation in ANSI C.", "description": "The package nanopb provides CMake targets:\r\n\r\n    find_package(nanopb CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE nanopb::protobuf-nanopb)\r\n" },
    "libyaml": { "name": "libyaml", "targets": ["yaml"], "portName": "libyaml", "portDescription": "A C library for parsing and emitting YAML.", "description": "The package libyaml provides CMake targets:\r\n\r\n    find_package(libyaml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE yaml)\r\n" },
    "Osi": { "name": "Osi", "targets": ["Coin::Osi"], "portName": "osi", "portDescription": "Osi (Open Solver Interface) provides an abstract base class to a generic linear programming (LP) solver, along with derived classes for specific solvers. Many applications may be able to use the Osi to insulate themselves from a specific LP solver. ", "description": "The package osi provides CMake targets:\r\n\r\n    find_package(Osi CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Coin::Osi)\r\n" },
    "unofficial-date": { "name": "unofficial-date", "targets": ["unofficial::date::date", "unofficial::date::tz"], "portName": "date", "portDescription": "A date and time library based on the C++11/14/17 <chrono> header", "description": "The package date provides CMake targets:\r\n\r\n    find_package(unofficial-date CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::date::date unofficial::date::tz)\r\n" },
    "octomap": { "name": "octomap", "targets": ["octomap", "octomap-static", "octomath", "octomath-static"], "portName": "octomap", "portDescription": "An Efficient Probabilistic 3D Mapping Framework Based on Octrees", "description": "The package octomap provides CMake targets:\r\n\r\n    find_package(octomap CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE octomap octomap-static octomath octomath-static)\r\n" },
    "nanovg": { "name": "nanovg", "targets": ["nanovg::nanovg"], "portName": "nanovg", "portDescription": "NanoVG is small antialiased vector graphics rendering library for OpenGL.", "description": "The package nanovg provides CMake targets:\r\n\r\n    find_package(nanovg CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE nanovg::nanovg)\r\n" },
    "oniguruma": { "name": "oniguruma", "targets": ["oniguruma::onig"], "portName": "oniguruma", "portDescription": "Modern and flexible regular expressions library", "description": "The package oniguruma provides CMake targets:\r\n\r\n    find_package(oniguruma CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE oniguruma::onig)\r\n" },
    "sol2": { "name": "sol2", "targets": ["sol2"], "portName": "sol2", "portDescription": "Sol v2.0 - a C++ <-> Lua API wrapper with advanced features and top notch performance - is here, and it's great", "description": "The package sol2 provides CMake targets:\r\n\r\n    find_package(sol2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE sol2)\r\n" },
    "restinio": { "name": "restinio", "targets": ["restinio::restinio"], "portName": "restinio", "portDescription": "A header-only C++14 library that gives you an embedded HTTP/Websocket server targeted primarily for asynchronous processing of HTTP-requests.", "description": "The package restinio provides CMake targets:\r\n\r\n    find_package(restinio CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE restinio::restinio)\r\n" },
    "geotrans": { "name": "geotrans", "targets": ["geotrans::MSPCoordinateConversionService", "geotrans::MSPdtcc"], "portName": "geotrans", "portDescription": "Geotrans is a library that allows you convert geographic coordinates among a wide variety of coordinate systems, map projections, and datums.", "description": "The package geotrans provides CMake targets:\r\n\r\n    find_package(geotrans CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE geotrans::MSPdtcc geotrans::MSPCoordinateConversionService)\r\n\r\n\r\nThe geotrans library depends on being able to read it's model data so you'll need to\r\nset an environment variable to let geotrans know where the models are installed:\r\n\r\nexport MSPCCS_DATA=C:/vsts/_work/1/s/installed/x64-windows/share/geotrans/data\r\n\r\n" },
    "Qt5Sensors": { "name": "Qt5Sensors", "targets": ["Qt5::QShakeSensorGesturePlugin", "Qt5::QtSensorGesturePlugin", "Qt5::Sensors", "Qt5::SensorsPrivate", "Qt5::genericSensorPlugin"], "portName": "qt5-sensors", "portDescription": "Qt5 Sensors module - Provides access to sensor hardware and motion gesture recognition.", "description": "The package qt5-sensors provides CMake targets:\r\n\r\n    find_package(Qt5Sensors CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QShakeSensorGesturePlugin Qt5::QtSensorGesturePlugin Qt5::Sensors Qt5::SensorsPrivate Qt5::genericSensorPlugin)\r\n" },
    "CImg": { "name": "CImg", "targets": ["CImg::CImg"], "portName": "cimg", "portDescription": "The CImg Library is a small, open-source, and modern C++ toolkit for image processing", "description": "The package cimg provides CMake targets:\r\n\r\n    find_package(CImg CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE CImg::CImg)\r\n" },
    "unofficial-breakpad": { "name": "unofficial-breakpad", "targets": ["unofficial::breakpad::libbreakpad", "unofficial::breakpad::libbreakpad_client"], "portName": "breakpad", "portDescription": "a set of client and server components which implement a crash-reporting system.", "description": "The package breakpad provides CMake targets:\r\n\r\n    find_package(unofficial-breakpad CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::breakpad::libbreakpad unofficial::breakpad::libbreakpad_client)\r\n" },
    "spdlog": { "name": "spdlog", "targets": ["spdlog::spdlog"], "portName": "spdlog", "portDescription": "Very fast, header only, C++ logging library", "description": "The package spdlog provides CMake targets:\r\n\r\n    find_package(spdlog CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE spdlog::spdlog)\r\n" },
    "cppfs": { "name": "cppfs", "targets": ["cppfs::cppfs"], "portName": "cppfs", "portDescription": "Cross-platform C++ file system library supporting multiple backends", "description": "The package cppfs provides CMake targets:\r\n\r\n    find_package(cppfs CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cppfs::cppfs)\r\n" },
    "tinyobjloader": { "name": "tinyobjloader", "targets": ["tinyobjloader::tinyobjloader"], "portName": "tinyobjloader", "portDescription": "Tiny but powerful single file wavefront obj loader", "description": "The package tinyobjloader provides CMake targets:\r\n\r\n    find_package(tinyobjloader CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tinyobjloader::tinyobjloader)\r\n" },
    "simdjson": { "name": "simdjson", "targets": ["simdjson::simdjson"], "portName": "simdjson", "portDescription": "A extremely fast JSON library that can parse gigabytes of JSON per second", "description": "The package simdjson provides CMake targets:\r\n\r\n    find_package(simdjson CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE simdjson::simdjson)\r\n" },
    "gflags": { "name": "gflags", "targets": ["gflags::gflags_shared", "gflags_shared"], "portName": "gflags", "portDescription": "A C++ library that implements commandline flags processing", "description": "The package gflags provides CMake targets:\r\n\r\n    find_package(gflags CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE gflags::gflags_shared gflags_shared)\r\n" },
    "wangle": { "name": "wangle", "targets": ["wangle::wangle"], "portName": "wangle", "portDescription": "Wangle is a framework providing a set of common client/server abstractions for building services in a consistent, modular, and composable way.", "description": "The package wangle is compatible with built-in CMake targets:\n\n    find_package(wangle REQUIRED)\n    target_link_libraries(main PRIVATE wangle::wangle)\n    target_include_directories(main PRIVATE ${WANGLE_INCLUDE_DIR})\n" },
    "Qt5WebChannel": { "name": "Qt5WebChannel", "targets": ["Qt5::WebChannel", "Qt5::WebChannelPrivate"], "portName": "qt5-webchannel", "portDescription": "Qt5 Web Channel module - Provides access to QObject or QML objects from HTML clients for seamless integration of Qt applications with HTML/JavaScript clients.", "description": "The package qt5-webchannel provides CMake targets:\r\n\r\n    find_package(Qt5WebChannel CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::WebChannel Qt5::WebChannelPrivate)\r\n" },
    "unofficial-mp": { "name": "unofficial-mp", "targets": ["unofficial::mp::asl", "unofficial::mp::mp"], "portName": "ampl-mp", "portDescription": "An open-source library for mathematical programming", "description": "The package ampl-mp provides CMake targets:\r\n\r\n    find_package(unofficial-mp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::mp::asl unofficial::mp::mp)\r\n" },
    "Qt5TextToSpeech": { "name": "Qt5TextToSpeech", "targets": ["Qt5::QTextToSpeechPluginSapi", "Qt5::TextToSpeech", "Qt5::TextToSpeechPrivate"], "portName": "qt5-speech", "portDescription": "Qt5 Speech Module", "description": "The package qt5-speech provides CMake targets:\r\n\r\n    find_package(Qt5TextToSpeech CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QTextToSpeechPluginSapi Qt5::TextToSpeech Qt5::TextToSpeechPrivate)\r\n" },
    "Clp": { "name": "Clp", "targets": ["Coin::Clp"], "portName": "clp", "portDescription": "Clp (Coin-or linear programming) is an open-source linear programming solver written in C++. It is primarily meant to be used as a callable library, but a basic, stand-alone executable version is also available. ", "description": "The package clp provides CMake targets:\r\n\r\n    find_package(Clp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Coin::Clp)\r\n" },
    "Qt5WinExtras": { "name": "Qt5WinExtras", "targets": ["Qt5::WinExtras", "Qt5::WinExtrasPrivate"], "portName": "qt5-winextras", "portDescription": "Qt5 Windows Extras Module. Provides platform-specific APIs for Windows.", "description": "The package qt5-winextras provides CMake targets:\r\n\r\n    find_package(Qt5WinExtras CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::WinExtras Qt5::WinExtrasPrivate)\r\n" },
    "effolkronium-random": { "name": "effolkronium-random", "targets": ["effolkronium-random"], "portName": "effolkronium-random", "portDescription": "Random with a modern C++ API", "description": "The package effolkronium-random provides CMake targets:\r\n\r\n    find_package(effolkronium-random CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE effolkronium-random)\r\n" },
    "cxxopts": { "name": "cxxopts", "targets": ["cxxopts::cxxopts"], "portName": "cxxopts", "portDescription": "This is a lightweight C++ option parser library, supporting the standard GNU style syntax for options", "description": "The package cxxopts provides CMake targets:\r\n\r\n    find_package(cxxopts CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cxxopts::cxxopts)\r\n" },
    "shp": { "name": "shp", "targets": ["shp"], "portName": "shapelib", "portDescription": "Shapefile C Library is simple C API for reading and writing ESRI Shapefiles", "description": "The package shapelib provides CMake targets:\r\n\r\n    find_package(shp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE shp)\r\n" },
    "unofficial-iconv": { "name": "unofficial-iconv", "targets": ["unofficial::iconv::libcharset", "unofficial::iconv::libiconv"], "portName": "libiconv", "portDescription": "GNU Unicode text conversion", "description": "The package libiconv provides CMake targets:\r\n\r\n    find_package(unofficial-iconv CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::iconv::libcharset unofficial::iconv::libiconv)\r\n" },
    "Qt5Multimedia": { "name": "Qt5Multimedia", "targets": ["Qt5::AudioCaptureServicePlugin", "Qt5::DSServicePlugin", "Qt5::Multimedia", "Qt5::MultimediaPrivate", "Qt5::QM3uPlaylistPlugin", "Qt5::QWasapiPlugin", "Qt5::QWindowsAudioPlugin", "Qt5::WMFServicePlugin"], "portName": "qt5-multimedia", "portDescription": "Qt5 Multimedia Module - Classes and widgets for audio, video, radio and camera functionality", "description": "The package qt5-multimedia provides CMake targets:\r\n\r\n    find_package(Qt5Multimedia CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::AudioCaptureServicePlugin Qt5::DSServicePlugin Qt5::Multimedia Qt5::MultimediaPrivate Qt5::QM3uPlaylistPlugin Qt5::QWasapiPlugin Qt5::QWindowsAudioPlugin Qt5::WMFServicePlugin)\r\n" },
    "Qt5MultimediaWidgets": { "name": "Qt5MultimediaWidgets", "targets": ["Qt5::MultimediaWidgets", "Qt5::MultimediaWidgetsPrivate"], "portName": "qt5-multimedia", "portDescription": "Qt5 Multimedia Module - Classes and widgets for audio, video, radio and camera functionality", "description": "The package qt5-multimedia provides CMake targets:\r\n\r\n    find_package(Qt5Multimedia CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::AudioCaptureServicePlugin Qt5::DSServicePlugin Qt5::Multimedia Qt5::MultimediaPrivate Qt5::QM3uPlaylistPlugin Qt5::QWasapiPlugin Qt5::QWindowsAudioPlugin Qt5::WMFServicePlugin)\r\n" },
    "XercesC": { "name": "XercesC", "targets": ["XercesC::XercesC", "xerces_xerces-c"], "portName": "xerces-c", "portDescription": "Xerces-C++ is a XML parser, for parsing, generating, manipulating, and validating XML documents using the DOM, SAX, and SAX2 APIs.", "description": "The package xerces-c provides CMake targets:\r\n\r\n    find_package(XercesC CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE XercesC::XercesC xerces_xerces-c)\r\n" },
    "libmodbus": { "name": "libmodbus", "targets": ["modbus"], "portName": "libmodbus", "portDescription": "libmodbus is a free software library to send/receive data with a device which respects the Modbus protocol", "description": "The package libmodbus provides CMake targets:\r\n\r\n    find_package(libmodbus CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE modbus)\r\n" },
    "aws-cpp-sdk-core": { "name": "aws-cpp-sdk-core", "targets": ["aws-cpp-sdk-core"], "portName": "aws-sdk-cpp", "portDescription": "AWS SDK for C++", "description": "The package aws-sdk-cpp provides CMake targets:\r\n\r\n    find_package(aws-cpp-sdk-core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE aws-cpp-sdk-core)\r\n" },
    "aws-cpp-sdk-dynamodb": { "name": "aws-cpp-sdk-dynamodb", "targets": ["aws-cpp-sdk-dynamodb"], "portName": "aws-sdk-cpp", "portDescription": "AWS SDK for C++", "description": "The package aws-sdk-cpp provides CMake targets:\r\n\r\n    find_package(aws-cpp-sdk-core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE aws-cpp-sdk-core)\r\n" },
    "aws-cpp-sdk-kinesis": { "name": "aws-cpp-sdk-kinesis", "targets": ["aws-cpp-sdk-kinesis"], "portName": "aws-sdk-cpp", "portDescription": "AWS SDK for C++", "description": "The package aws-sdk-cpp provides CMake targets:\r\n\r\n    find_package(aws-cpp-sdk-core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE aws-cpp-sdk-core)\r\n" },
    "aws-cpp-sdk-s3": { "name": "aws-cpp-sdk-s3", "targets": ["aws-cpp-sdk-s3"], "portName": "aws-sdk-cpp", "portDescription": "AWS SDK for C++", "description": "The package aws-sdk-cpp provides CMake targets:\r\n\r\n    find_package(aws-cpp-sdk-core CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE aws-cpp-sdk-core)\r\n" },
    "ZLIB": { "name": "ZLIB", "targets": [""], "portName": "zlib", "portDescription": "A compression library", "description": "The package zlib is compatible with built-in CMake targets:\r\n\r\n    find_package(ZLIB REQUIRED)\r\n    target_link_libraries(main PRIVATE ZLIB::ZLIB)\r\n" },
    "ogdf": { "name": "ogdf", "targets": ["COIN", "OGDF"], "portName": "ogdf", "portDescription": "Open Graph Drawing Framework", "description": "The package ogdf provides CMake targets:\r\n\r\n    find_package(ogdf CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE COIN OGDF)\r\n" },
    "treehopper": { "name": "treehopper", "targets": ["treehopper"], "portName": "treehopper", "portDescription": "Treehopper connects the physical world to your computer, tablet, or smartphone. For more information, visit https://treehopper.io.", "description": "The package treehopper provides CMake targets:\r\n\r\n    find_package(treehopper CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE treehopper)\r\n" },
    "Async++": { "name": "Async++", "targets": ["Async++"], "portName": "asyncplusplus", "portDescription": "Async++ is a lightweight concurrency framework for C++11", "description": "The package asyncplusplus provides CMake targets:\r\n\r\n    find_package(Async++ CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Async++)\r\n" },
    "telnetpp": { "name": "telnetpp", "targets": ["telnetpp"], "portName": "telnetpp", "portDescription": "Telnet++ is an implementation of the Telnet Session Layer protocol using C++14", "description": "The package telnetpp provides CMake targets:\r\n\r\n    find_package(telnetpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE telnetpp)\r\n" },
    "rapidcheck": { "name": "rapidcheck", "targets": ["rapidcheck", "rapidcheck_boost", "rapidcheck_boost_test", "rapidcheck_catch", "rapidcheck_gmock", "rapidcheck_gtest"], "portName": "rapidcheck", "portDescription": "A property-based testing library for C++ (a la QuickCheck) with the goal of being simple to use with as little boilerplate as possible.", "description": "The package rapidcheck provides CMake targets:\r\n\r\n    find_package(rapidcheck CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE rapidcheck rapidcheck_boost rapidcheck_boost_test rapidcheck_catch rapidcheck_gmock rapidcheck_gtest)\r\n" },
    "Snappy": { "name": "Snappy", "targets": [""], "portName": "orc", "portDescription": "The smallest, fastest columnar storage for Hadoop workloads.", "description": "The package orc does not provide CMake targets:\n\n    find_package(protobuf CONFIG REQUIRED)\n    find_package(ZLIB REQUIRED)\n    find_package(Snappy CONFIG REQUIRED)\n\n    find_library(LZ4_LIBRARY NAMES lz4d lz4)\n    find_library(ORC_LIBRARY NAMES orc)\n\n    target_link_libraries(main PRIVATE ${ORC_LIBRARY} protobuf::libprotoc protobuf::libprotobuf Snappy::snappy ${LZ4_LIBRARY} ZLIB::ZLIB)\n" },
    "ZLIB": { "name": "ZLIB", "targets": [""], "portName": "orc", "portDescription": "The smallest, fastest columnar storage for Hadoop workloads.", "description": "The package orc does not provide CMake targets:\n\n    find_package(protobuf CONFIG REQUIRED)\n    find_package(ZLIB REQUIRED)\n    find_package(Snappy CONFIG REQUIRED)\n\n    find_library(LZ4_LIBRARY NAMES lz4d lz4)\n    find_library(ORC_LIBRARY NAMES orc)\n\n    target_link_libraries(main PRIVATE ${ORC_LIBRARY} protobuf::libprotoc protobuf::libprotobuf Snappy::snappy ${LZ4_LIBRARY} ZLIB::ZLIB)\n" },
    "protobuf": { "name": "protobuf", "targets": [""], "portName": "orc", "portDescription": "The smallest, fastest columnar storage for Hadoop workloads.", "description": "The package orc does not provide CMake targets:\n\n    find_package(protobuf CONFIG REQUIRED)\n    find_package(ZLIB REQUIRED)\n    find_package(Snappy CONFIG REQUIRED)\n\n    find_library(LZ4_LIBRARY NAMES lz4d lz4)\n    find_library(ORC_LIBRARY NAMES orc)\n\n    target_link_libraries(main PRIVATE ${ORC_LIBRARY} protobuf::libprotoc protobuf::libprotobuf Snappy::snappy ${LZ4_LIBRARY} ZLIB::ZLIB)\n" },
    "geographiclib": { "name": "geographiclib", "targets": ["GeographicLib", "GeographicLib::GeographicLib"], "portName": "geographiclib", "portDescription": "a small set of C++ classes for performing conversions between geographic, UTM, UPS, MGRS, geocentric, and local cartesian coordinates, for gravity (e.g., EGM2008), geoid height, and geomagnetic field (e.g., WMM2010) calculations, and for solving geodesic problems.", "description": "The package geographiclib provides CMake targets:\r\n\r\n    find_package(geographiclib CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE GeographicLib GeographicLib::GeographicLib)\r\n" },
    "globjects": { "name": "globjects", "targets": ["globjects::globjects"], "portName": "globjects", "portDescription": "C++ library strictly wrapping OpenGL objects. <https://github.com/cginternals/globjects>", "description": "The package globjects provides CMake targets:\r\n\r\n    find_package(globjects CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE globjects::globjects)\r\n" },
    "folly": { "name": "folly", "targets": ["Folly::folly", "Folly::folly_deps", "Folly::follybenchmark"], "portName": "folly", "portDescription": "An open-source C++ library developed and used at Facebook. The library is UNSTABLE on Windows", "description": "The package folly provides CMake targets:\r\n\r\n    find_package(folly CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Folly::folly Folly::folly_deps Folly::follybenchmark)\r\n" },
    "LibtorrentRasterbar": { "name": "LibtorrentRasterbar", "targets": ["LibtorrentRasterbar::torrent-rasterbar"], "portName": "libtorrent", "portDescription": "An efficient feature complete C++ BitTorrent implementation ", "description": "The package libtorrent provides CMake targets:\r\n\r\n    find_package(LibtorrentRasterbar CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE LibtorrentRasterbar::torrent-rasterbar)\r\n" },
    "unofficial-sajson": { "name": "unofficial-sajson", "targets": ["unofficial::sajson::sajson"], "portName": "sajson", "portDescription": "Lightweight, extremely high-performance JSON parser for C++11", "description": "The package sajson provides CMake targets:\r\n\r\n    find_package(unofficial-sajson CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::sajson::sajson)\r\n" },
    "Leptonica": { "name": "Leptonica", "targets": ["leptonica"], "portName": "leptonica", "portDescription": "An open source library containing software that is broadly useful for image processing and image analysis applications", "description": "The package leptonica provides CMake targets:\r\n\r\n    find_package(Leptonica CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE leptonica)\r\n" },
    "cmake": { "name": "cmake", "targets": ["cartographer"], "portName": "cartographer", "portDescription": "Google 2D & 3D SLAM package", "description": "The package cartographer provides CMake targets:\r\n\r\n    find_package(cmake CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cartographer)\r\n" },
    "benchmark": { "name": "benchmark", "targets": ["benchmark::benchmark", "benchmark::benchmark_main"], "portName": "benchmark", "portDescription": "A library to support the benchmarking of functions, similar to unit-tests.", "description": "The package benchmark provides CMake targets:\r\n\r\n    find_package(benchmark CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE benchmark::benchmark benchmark::benchmark_main)\r\n" },
    "Qt5NetworkAuth": { "name": "Qt5NetworkAuth", "targets": ["Qt5::NetworkAuth", "Qt5::NetworkAuthPrivate"], "portName": "qt5-networkauth", "portDescription": "Qt5 Network Authorization Module", "description": "The package qt5-networkauth provides CMake targets:\r\n\r\n    find_package(Qt5NetworkAuth CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::NetworkAuth Qt5::NetworkAuthPrivate)\r\n" },
    "fastcdr": { "name": "fastcdr", "targets": ["fastcdr"], "portName": "fastcdr", "portDescription": "eProsima FastCDR is a C++ library that provides two serialization mechanisms. One is the standard CDR serialization mechanism, while the other is a faster implementation that modifies the standard.", "description": "The package fastcdr provides CMake targets:\r\n\r\n    find_package(fastcdr CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE fastcdr)\r\n" },
    "MagnumPlugins": { "name": "MagnumPlugins", "targets": ["MagnumPlugins::${_component}", "MagnumPlugins::${_component}"], "portName": "magnum-plugins", "portDescription": "Plugins for magnum, C++11/C++14 graphics middleware for games and data visualization http://magnum.graphics/", "description": "The package magnum-plugins provides CMake targets:\r\n\r\n    find_package(MagnumPlugins CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE MagnumPlugins::${_component} MagnumPlugins::${_component})\r\n" },
    "unofficial-box2d": { "name": "unofficial-box2d", "targets": ["unofficial::box2d::Box2D"], "portName": "box2d", "portDescription": "Box2D (http://box2d.org) is an open source C++ engine for simulating rigid bodies in 2D.", "description": "The package box2d provides CMake targets:\r\n\r\n    find_package(unofficial-box2d CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::box2d::Box2D)\r\n" },
    "graphite2": { "name": "graphite2", "targets": ["gr2_graphite2"], "portName": "graphite2", "portDescription": "Graphite is a \"smart font\" system developed specifically to handle the complexities of lesser-known languages of the world.\n  Graphite2 is a rework of the original Graphite engine that is faster, smaller, and uses an API that is better suited to the layout architecture of most text-processing applications.", "description": "The package graphite2 provides CMake targets:\r\n\r\n    find_package(graphite2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE gr2_graphite2)\r\n" },
    "unofficial-brotli": { "name": "unofficial-brotli", "targets": ["unofficial::brotli::brotlicommon", "unofficial::brotli::brotlidec", "unofficial::brotli::brotlienc"], "portName": "brotli", "portDescription": "a generic-purpose lossless compression algorithm that compresses data using a combination of a modern variant of the LZ77 algorithm, Huffman coding and 2nd order context modeling.", "description": "The package brotli provides CMake targets:\r\n\r\n    find_package(unofficial-brotli CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::brotli::brotlicommon unofficial::brotli::brotlidec unofficial::brotli::brotlienc)\r\n" },
    "nanomsg": { "name": "nanomsg", "targets": ["nanomsg"], "portName": "nanomsg", "portDescription": "a simple high-performance implementation of several \"scalability protocols\".\n  These scalability protocols are light-weight messaging protocols which can be used to solve a number of very common messaging patterns, such as request/reply, publish/subscribe, surveyor/respondent, and so forth. These protocols can run over a variety of transports such as TCP, UNIX sockets, and even WebSocket.", "description": "The package nanomsg provides CMake targets:\r\n\r\n    find_package(nanomsg CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE nanomsg)\r\n" },
    "Pangolin": { "name": "Pangolin", "targets": ["pangolin"], "portName": "pangolin", "portDescription": "Lightweight GUI Library", "description": "The package pangolin is compatible with built-in CMake targets:\r\n\r\n    find_package(Pangolin CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE pangolin)\r\n    target_include_directories(main PRIVATE ${Pangolin_INCLUDE_DIRS})\r\n" },
    "unofficial-http-parser": { "name": "unofficial-http-parser", "targets": ["unofficial::http_parser::http_parser"], "portName": "http-parser", "portDescription": "HTTP Parser.", "description": "The package http-parser provides CMake targets:\r\n\r\n    find_package(unofficial-http-parser CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::http_parser::http_parser)\r\n" },
    "Qt5Gui": { "name": "Qt5Gui", "targets": ["Qt5::QVirtualKeyboardPlugin"], "portName": "qt5-virtualkeyboard", "portDescription": "Qt5 Virtual Keyboard Module - A framework for implementing different input methods. Supports localized keyboard layouts and custom visual themes", "description": "The package qt5-virtualkeyboard provides CMake targets:\r\n\r\n    find_package(Qt5Gui CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QVirtualKeyboardPlugin)\r\n" },
    "Qt5VirtualKeyboard": { "name": "Qt5VirtualKeyboard", "targets": ["Qt5::QtVirtualKeyboardHangulPlugin", "Qt5::QtVirtualKeyboardOpenWnnPlugin", "Qt5::QtVirtualKeyboardPinyinPlugin", "Qt5::QtVirtualKeyboardTCImePlugin", "Qt5::QtVirtualKeyboardThaiPlugin", "Qt5::VirtualKeyboard", "Qt5::VirtualKeyboardPrivate"], "portName": "qt5-virtualkeyboard", "portDescription": "Qt5 Virtual Keyboard Module - A framework for implementing different input methods. Supports localized keyboard layouts and custom visual themes", "description": "The package qt5-virtualkeyboard provides CMake targets:\r\n\r\n    find_package(Qt5Gui CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QVirtualKeyboardPlugin)\r\n" },
    "glad": { "name": "glad", "targets": ["glad::glad"], "portName": "glad", "portDescription": "Multi-Language Vulkan/GL/GLES/EGL/GLX/WGL Loader-Generator based on the official specs.", "description": "The package glad provides CMake targets:\r\n\r\n    find_package(glad CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE glad::glad)\r\n" },
    "LibSndFile": { "name": "LibSndFile", "targets": ["sndfile-shared"], "portName": "libsndfile", "portDescription": "Library to read, write and manipulate many soundfile types. Authored by Eric de Castro Lopo", "description": "The package libsndfile provides CMake targets:\r\n\r\n    find_package(LibSndFile CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE sndfile-shared)\r\n" },
    "Magnum": { "name": "Magnum", "targets": ["Magnum::${_component}", "Magnum::${_component}", "Magnum::Application", "Magnum::Application", "Magnum::GLContext", "Magnum::GLContext", "Magnum::Magnum", "Magnum::WindowlessApplication", "Magnum::WindowlessApplication"], "portName": "magnum", "portDescription": "C++11/C++14 graphics middleware for games and data visualization http://magnum.graphics/", "description": "The package magnum provides CMake targets:\r\n\r\n    find_package(Magnum CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Magnum::${_component} Magnum::${_component} Magnum::Application Magnum::Application Magnum::GLContext Magnum::GLContext Magnum::Magnum Magnum::WindowlessApplication Magnum::WindowlessApplication)\r\n" },
    "platform_folders": { "name": "platform_folders", "targets": ["sago::platform_folders"], "portName": "platform-folders", "portDescription": "A C++ library to look for special directories like \"My Documents\" and \"%APPDATA%\"", "description": "The package platform-folders provides CMake targets:\r\n\r\n    find_package(platform_folders CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE sago::platform_folders)\r\n" },
    "Libwebsockets": { "name": "Libwebsockets", "targets": ["websockets_shared"], "portName": "libwebsockets", "portDescription": "Libwebsockets is a lightweight pure C library built to use minimal CPU and memory resources, and provide fast throughput in both directions as client or server.", "description": "The package libwebsockets provides CMake targets:\r\n\r\n    find_package(Libwebsockets CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE websockets_shared)\r\n" },
    "Poco": { "name": "Poco", "targets": ["Poco::CppParser", "Poco::Crypto", "Poco::Encodings", "Poco::Foundation", "Poco::JSON", "Poco::MongoDB", "Poco::Net", "Poco::NetSSL", "Poco::NetSSLWin", "Poco::PDF", "Poco::Redis", "Poco::SQL", "Poco::SQLODBC", "Poco::SQLPostgreSQL", "Poco::SQLSQLite", "Poco::SevenZip", "Poco::Util", "Poco::XML", "Poco::Zip"], "portName": "poco", "portDescription": "Modern, powerful open source C++ class libraries for building network and internet-based applications that run on desktop, server, mobile and embedded systems. (https://github.com/pocoproject/poco)", "description": "The package poco provides CMake targets:\r\n\r\n    find_package(Poco CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Poco::CppParser Poco::Crypto Poco::Encodings Poco::Foundation Poco::JSON Poco::MongoDB Poco::Net Poco::NetSSL Poco::NetSSLWin Poco::PDF Poco::Redis Poco::SQL Poco::SQLODBC Poco::SQLPostgreSQL Poco::SQLSQLite Poco::SevenZip Poco::Util Poco::XML Poco::Zip)\r\n" },
    "Qt5WebSockets": { "name": "Qt5WebSockets", "targets": ["Qt5::WebSockets", "Qt5::WebSocketsPrivate"], "portName": "qt5-websockets", "portDescription": "Qt5 Web Sockets Module - provides WebSocket communication compliant with RFC 6455", "description": "The package qt5-websockets provides CMake targets:\r\n\r\n    find_package(Qt5WebSockets CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::WebSockets Qt5::WebSocketsPrivate)\r\n" },
    "glew": { "name": "glew", "targets": ["${_glew_dest_target}", "${_glew_dest_target}", "...", "GLEW::glew", "ZLIB::ZLIB"], "portName": "glew", "portDescription": "The OpenGL Extension Wrangler Library (GLEW) is a cross-platform open-source C/C++ extension loading library.", "description": "The package glew is compatible with built-in CMake targets:\r\n\r\n    find_package(GLEW REQUIRED)\r\n    target_link_libraries(main PRIVATE GLEW::GLEW)\r\n" },
    "xtl": { "name": "xtl", "targets": ["xtl"], "portName": "xtl", "portDescription": "The x template library.", "description": "The package xtl provides CMake targets:\r\n\r\n    find_package(xtl CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE xtl)\r\n" },
    "amqpcpp": { "name": "amqpcpp", "targets": ["amqpcpp"], "portName": "amqpcpp", "portDescription": "AMQP-CPP is a C++ library for communicating with a RabbitMQ message broker", "description": "The package amqpcpp provides CMake targets:\r\n\r\n    find_package(amqpcpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE amqpcpp)\r\n" },
    "cpprestsdk": { "name": "cpprestsdk", "targets": ["cpprestsdk::cpprest", "cpprestsdk::cpprestsdk_boost_internal", "cpprestsdk::cpprestsdk_openssl_internal", "cpprestsdk::cpprestsdk_websocketpp_internal", "cpprestsdk::cpprestsdk_zlib_internal"], "portName": "cpprestsdk", "portDescription": "C++11 JSON, REST, and OAuth library\n  The C++ REST SDK is a Microsoft project for cloud-based client-server communication in native code using a modern asynchronous C++ API design. This project aims to help C++ developers connect to and interact with services.", "description": "The package cpprestsdk provides CMake targets:\r\n\r\n    find_package(cpprestsdk CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cpprestsdk::cpprest cpprestsdk::cpprestsdk_boost_internal cpprestsdk::cpprestsdk_openssl_internal cpprestsdk::cpprestsdk_websocketpp_internal cpprestsdk::cpprestsdk_zlib_internal)\r\n" },
    "Qt5DataVisualization": { "name": "Qt5DataVisualization", "targets": ["Qt5::DataVisualization", "Qt5::DataVisualizationPrivate"], "portName": "qt5-datavis3d", "portDescription": "Qt5 Data Visualization 3d Module - UI Components for creating 3D data visualizations", "description": "The package qt5-datavis3d provides CMake targets:\r\n\r\n    find_package(Qt5DataVisualization CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::DataVisualization Qt5::DataVisualizationPrivate)\r\n" },
    "lcm": { "name": "lcm", "targets": ["${NAME}", "${NAME}", "lcm", "lcm-coretypes"], "portName": "lcm", "portDescription": "Lightweight Communications and Marshalling (LCM)\n  LCM is a set of libraries and tools for message passing and data marshalling, targeted at real-time systems where high-bandwidth and low latency are critical. It provides a publish/subscribe message passing model and automatic marshalling/unmarshalling code generation with bindings for applications in a variety of programming languages.", "description": "The package lcm provides CMake targets:\r\n\r\n    find_package(lcm CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${NAME} ${NAME} lcm lcm-coretypes)\r\n" },
    "reproc": { "name": "reproc", "targets": ["reproc::reproc"], "portName": "reproc", "portDescription": "Cross-platform library that simplifies working with external CLI applications from C and C++ ", "description": "The package reproc provides CMake targets:\r\n\r\n    find_package(reproc CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE reproc::reproc)\r\n" },
    "stxxl": { "name": "stxxl", "targets": ["stxxl"], "portName": "stxxl", "portDescription": "Standard Template Library for Extra Large Data Sets", "description": "The package stxxl provides CMake targets:\r\n\r\n    find_package(stxxl CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE stxxl)\r\n" },
    "odb": { "name": "odb", "targets": ["odb::libodb-pgsql"], "portName": "libodb-pgsql", "portDescription": "Description: PostgreSQL support for the ODB ORM library", "description": "The package libodb-pgsql provides CMake targets:\r\n\r\n    find_package(odb CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE odb::libodb-pgsql)\r\n" },
    "harfbuzz": { "name": "harfbuzz", "targets": ["harfbuzz::harfbuzz"], "portName": "harfbuzz", "portDescription": "HarfBuzz OpenType text shaping engine", "description": "The package harfbuzz provides CMake targets:\r\n\r\n    find_package(harfbuzz CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE harfbuzz::harfbuzz)\r\n" },
    "io2d": { "name": "io2d", "targets": ["io2d::io2d", "io2d::io2d_cairo", "io2d::io2d_cairo_win32", "io2d::io2d_core"], "portName": "io2d", "portDescription": "a lightweight, cross platform drawing library", "description": "The package io2d provides CMake targets:\r\n\r\n    find_package(io2d CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE io2d::io2d io2d::io2d_cairo io2d::io2d_cairo_win32 io2d::io2d_core)\r\n" },
    "Cnl": { "name": "Cnl", "targets": ["Cnl::Cnl"], "portName": "cnl", "portDescription": "A Compositional Numeric Library for C++", "description": "The package cnl provides CMake targets:\r\n\r\n    find_package(Cnl CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Cnl::Cnl)\r\n" },
    "OpenSSL": { "name": "OpenSSL", "targets": [""], "portName": "openssl-windows", "portDescription": "OpenSSL is an open source project that provides a robust, commercial-grade, and full-featured toolkit for the Transport Layer Security (TLS) and Secure Sockets Layer (SSL) protocols. It is also a general-purpose cryptography library.", "description": "The package openssl is compatible with built-in CMake targets:\r\n\r\n    find_package(OpenSSL REQUIRED)\r\n    target_link_libraries(main PRIVATE OpenSSL::SSL OpenSSL::Crypto)\r\n" },
    "curl": { "name": "curl", "targets": ["CURL::libcurl"], "portName": "curl", "portDescription": "A library for transferring data with URLs", "description": "The package curl is compatible with built-in CMake targets:\r\n\r\n    find_package(CURL REQUIRED)\r\n    target_link_libraries(main PRIVATE ${CURL_LIBRARIES})\r\n    target_include_directories(main PRIVATE ${CURL_INCLUDE_DIRS})\r\n" },
    "PCL": { "name": "PCL", "targets": ["${pcl_component}"], "portName": "pcl", "portDescription": "Point Cloud Library (PCL) is open source library for 2D/3D image and point cloud processing.", "description": "The package pcl provides CMake targets:\r\n\r\n    find_package(PCL CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${pcl_component})\r\n" },
    "Qt5Svg": { "name": "Qt5Svg", "targets": ["Qt5::QSvgIconPlugin", "Qt5::QSvgPlugin", "Qt5::Svg", "Qt5::SvgPrivate"], "portName": "qt5-svg", "portDescription": "Qt5 SVG Module - provides classes for displaying the contents of SVG files", "description": "The package qt5-svg provides CMake targets:\r\n\r\n    find_package(Qt5Svg CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QSvgIconPlugin Qt5::QSvgPlugin Qt5::Svg Qt5::SvgPrivate)\r\n" },
    "VTK": { "name": "VTK", "targets": ["${module_name}Java", "${name}", "${name}", "${vtk-module}", "foo", "shared_variant", "somelib", "somelib", "somelib", "somelib", "static_variant", "verdict", "vtkChartsCore", "vtkCommonColor", "vtkCommonComputationalGeometry", "vtkCommonCore", "vtkCommonDataModel", "vtkCommonExecutionModel", "vtkCommonMath", "vtkCommonMisc", "vtkCommonSystem", "vtkCommonTransforms", "vtkDICOMParser", "vtkDomainsChemistry", "vtkDomainsChemistryOpenGL2", "vtkFiltersAMR", "vtkFiltersCore", "vtkFiltersExtraction", "vtkFiltersFlowPaths", "vtkFiltersGeneral", "vtkFiltersGeneric", "vtkFiltersGeometry", "vtkFiltersHybrid", "vtkFiltersHyperTree", "vtkFiltersImaging", "vtkFiltersModeling", "vtkFiltersParallel", "vtkFiltersParallelImaging", "vtkFiltersPoints", "vtkFiltersProgrammable", "vtkFiltersSMP", "vtkFiltersSelection", "vtkFiltersSources", "vtkFiltersStatistics", "vtkFiltersTexture", "vtkFiltersTopology", "vtkFiltersVerdict", "vtkGeovisCore", "vtkIOAMR", "vtkIOCore", "vtkIOEnSight", "vtkIOExodus", "vtkIOExport", "vtkIOExportOpenGL2", "vtkIOGeometry", "vtkIOImage", "vtkIOImport", "vtkIOInfovis", "vtkIOLSDyna", "vtkIOLegacy", "vtkIOMINC", "vtkIOMovie", "vtkIONetCDF", "vtkIOPLY", "vtkIOParallel", "vtkIOParallelXML", "vtkIOSQL", "vtkIOTecplotTable", "vtkIOVideo", "vtkIOXML", "vtkIOXMLParser", "vtkImagingColor", "vtkImagingCore", "vtkImagingFourier", "vtkImagingGeneral", "vtkImagingHybrid", "vtkImagingMath", "vtkImagingMorphological", "vtkImagingSources", "vtkImagingStatistics", "vtkImagingStencil", "vtkInfovisCore", "vtkInfovisLayout", "vtkInteractionImage", "vtkInteractionStyle", "vtkInteractionWidgets", "vtkNetCDF", "vtkParallelCore", "vtkRenderingAnnotation", "vtkRenderingContext2D", "vtkRenderingContextOpenGL2", "vtkRenderingCore", "vtkRenderingFreeType", "vtkRenderingGL2PSOpenGL2", "vtkRenderingImage", "vtkRenderingLOD", "vtkRenderingLabel", "vtkRenderingOpenGL2", "vtkRenderingVolume", "vtkRenderingVolumeOpenGL2", "vtkViewsContext2D", "vtkViewsCore", "vtkViewsGeovis", "vtkViewsInfovis", "vtkalglib", "vtkexoIIc", "vtkgl2ps", "vtklibharu", "vtkmetaio", "vtknetcdfcpp", "vtksqlite", "vtksys"], "portName": "vtk", "portDescription": "Software system for 3D computer graphics, image processing, and visualization", "description": "The package vtk provides CMake targets:\r\n\r\n    find_package(VTK CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${module_name}Java ${name} ${name} ${vtk-module} foo shared_variant somelib somelib somelib somelib static_variant verdict vtkChartsCore vtkCommonColor vtkCommonComputationalGeometry vtkCommonCore vtkCommonDataModel vtkCommonExecutionModel vtkCommonMath vtkCommonMisc vtkCommonSystem vtkCommonTransforms vtkDICOMParser vtkDomainsChemistry vtkDomainsChemistryOpenGL2 vtkFiltersAMR vtkFiltersCore vtkFiltersExtraction vtkFiltersFlowPaths vtkFiltersGeneral vtkFiltersGeneric vtkFiltersGeometry vtkFiltersHybrid vtkFiltersHyperTree vtkFiltersImaging vtkFiltersModeling vtkFiltersParallel vtkFiltersParallelImaging vtkFiltersPoints vtkFiltersProgrammable vtkFiltersSMP vtkFiltersSelection vtkFiltersSources vtkFiltersStatistics vtkFiltersTexture vtkFiltersTopology vtkFiltersVerdict vtkGeovisCore vtkIOAMR vtkIOCore vtkIOEnSight vtkIOExodus vtkIOExport vtkIOExportOpenGL2 vtkIOGeometry vtkIOImage vtkIOImport vtkIOInfovis vtkIOLSDyna vtkIOLegacy vtkIOMINC vtkIOMovie vtkIONetCDF vtkIOPLY vtkIOParallel vtkIOParallelXML vtkIOSQL vtkIOTecplotTable vtkIOVideo vtkIOXML vtkIOXMLParser vtkImagingColor vtkImagingCore vtkImagingFourier vtkImagingGeneral vtkImagingHybrid vtkImagingMath vtkImagingMorphological vtkImagingSources vtkImagingStatistics vtkImagingStencil vtkInfovisCore vtkInfovisLayout vtkInteractionImage vtkInteractionStyle vtkInteractionWidgets vtkNetCDF vtkParallelCore vtkRenderingAnnotation vtkRenderingContext2D vtkRenderingContextOpenGL2 vtkRenderingCore vtkRenderingFreeType vtkRenderingGL2PSOpenGL2 vtkRenderingImage vtkRenderingLOD vtkRenderingLabel vtkRenderingOpenGL2 vtkRenderingVolume vtkRenderingVolumeOpenGL2 vtkViewsContext2D vtkViewsCore vtkViewsGeovis vtkViewsInfovis vtkalglib vtkexoIIc vtkgl2ps vtklibharu vtkmetaio vtknetcdfcpp vtksqlite vtksys)\r\n" },
    "Qt5Scxml": { "name": "Qt5Scxml", "targets": ["Qt5::Scxml", "Qt5::ScxmlPrivate"], "portName": "qt5-scxml", "portDescription": "Qt5 SCXML Module - Provides classes and tools for creating state machines from SCXML files and embedding them in applications", "description": "The package qt5-scxml provides CMake targets:\r\n\r\n    find_package(Qt5Scxml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Scxml Qt5::ScxmlPrivate)\r\n" },
    "Qt5RemoteObjects": { "name": "Qt5RemoteObjects", "targets": ["Qt5::RemoteObjects", "Qt5::RemoteObjectsPrivate"], "portName": "qt5-remoteobjects", "portDescription": "Qt5 Remoteobjects module - Provides an easy to use mechanism for sharing a QObject's API (Properties/Signals/Slots) between processes or devices.", "description": "The package qt5-remoteobjects provides CMake targets:\r\n\r\n    find_package(Qt5RemoteObjects CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::RemoteObjects Qt5::RemoteObjectsPrivate)\r\n" },
    "Qt5RepParser": { "name": "Qt5RepParser", "targets": ["Qt5::RepParser", "Qt5::RepParserPrivate"], "portName": "qt5-remoteobjects", "portDescription": "Qt5 Remoteobjects module - Provides an easy to use mechanism for sharing a QObject's API (Properties/Signals/Slots) between processes or devices.", "description": "The package qt5-remoteobjects provides CMake targets:\r\n\r\n    find_package(Qt5RemoteObjects CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::RemoteObjects Qt5::RemoteObjectsPrivate)\r\n" },
    "OpenCV": { "name": "OpenCV", "targets": ["${__cvcomponent}", "opencv_calib3d", "opencv_core", "opencv_features2d", "opencv_flann", "opencv_highgui", "opencv_imgcodecs", "opencv_imgproc", "opencv_ml", "opencv_objdetect", "opencv_photo", "opencv_shape", "opencv_stitching", "opencv_superres", "opencv_video", "opencv_videoio", "opencv_videostab"], "portName": "opencv", "portDescription": "computer vision library", "description": "The package opencv provides CMake integration:\r\n\r\n    find_package(OpenCV REQUIRED)\r\n    target_include_directories(main PRIVATE ${OpenCV_INCLUDE_DIRS})\r\n    target_link_libraries(main PRIVATE ${OpenCV_LIBS})\r\n" },
    "Cpp-Taskflow": { "name": "Cpp-Taskflow", "targets": ["Cpp-Taskflow::Cpp-Taskflow"], "portName": "cpp-taskflow", "portDescription": "Fast Parallel Tasking Programming Library using Modern C++.", "description": "The package cpp-taskflow provides CMake targets:\r\n\r\n    find_package(Cpp-Taskflow CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Cpp-Taskflow::Cpp-Taskflow)\r\n" },
    "dlib": { "name": "dlib", "targets": ["dlib::dlib"], "portName": "dlib", "portDescription": "Modern C++ toolkit containing machine learning algorithms and tools for creating complex software in C++", "description": "The package dlib provides CMake targets:\r\n\r\n    find_package(dlib CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE dlib::dlib)\r\n" },
    "LibLZMA": { "name": "LibLZMA", "targets": [""], "portName": "liblzma", "portDescription": "Compression library with an API similar to that of zlib.", "description": "The package liblzma is compatible with built-in CMake targets:\r\n\r\n    find_package(LibLZMA REQUIRED)\r\n    target_include_directories(main PRIVATE ${LIBLZMA_INCLUDE_DIRS})\r\n    target_link_libraries(main PRIVATE ${LIBLZMA_LIBRARIES})\r\n" },
    "milerius-sfml-imgui": { "name": "milerius-sfml-imgui", "targets": ["sfml-imgui::sfml-imgui"], "portName": "milerius-sfml-imgui", "portDescription": "imgui dll for sfml usage", "description": "The package milerius-sfml-imgui provides CMake targets:\r\n\r\n    find_package(milerius-sfml-imgui CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE sfml-imgui::sfml-imgui)\r\n" },
    "argh": { "name": "argh", "targets": ["argh"], "portName": "argh", "portDescription": "Argh! A minimalist argument handler.", "description": "The package argh provides CMake targets:\r\n\r\n    find_package(argh CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE argh)\r\n" },
    "soil2": { "name": "soil2", "targets": ["soil2"], "portName": "soil2", "portDescription": "Simple OpenGL Image Library 2", "description": "The package soil2 provides CMake targets:\r\n\r\n    find_package(soil2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE soil2)\r\n" },
    "websocketpp": { "name": "websocketpp", "targets": ["websocketpp::websocketpp"], "portName": "websocketpp", "portDescription": "Library that implements RFC6455 The WebSocket Protocol", "description": "The package websocketpp provides CMake targets:\r\n\r\n    find_package(websocketpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE websocketpp::websocketpp)\r\n" },
    "PNGwriter": { "name": "PNGwriter", "targets": ["PNGwriter::PNGwriter"], "portName": "pngwriter", "portDescription": "PNGwriter is a very easy to use open source graphics library that uses PNG as its output format", "description": "The package pngwriter provides CMake targets:\r\n\r\n    find_package(PNGwriter CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE PNGwriter::PNGwriter)\r\n" },
    "azure_iot_sdks": { "name": "azure_iot_sdks", "targets": ["hsm_security_client", "iothub_client", "iothub_client_amqp_transport", "iothub_client_amqp_ws_transport", "iothub_client_http_transport", "iothub_client_mqtt_transport", "iothub_client_mqtt_ws_transport", "iothub_service_client", "prov_auth_client", "serializer"], "portName": "azure-iot-sdk-c", "portDescription": "A C99 SDK for connecting devices to Microsoft Azure IoT services ", "description": "The package azure-iot-sdk-c provides CMake targets:\r\n\r\n    find_package(azure_iot_sdks CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE hsm_security_client iothub_client iothub_client_amqp_transport iothub_client_amqp_ws_transport iothub_client_http_transport iothub_client_mqtt_transport iothub_client_mqtt_ws_transport iothub_service_client prov_auth_client serializer)\r\n" },
    "umqtt": { "name": "umqtt", "targets": ["umqtt"], "portName": "azure-umqtt-c", "portDescription": "General purpose library for communication over the mqtt protocol", "description": "The package azure-umqtt-c provides CMake targets:\r\n\r\n    find_package(umqtt CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE umqtt)\r\n" },
    "EnTT": { "name": "EnTT", "targets": ["EnTT"], "portName": "entt", "portDescription": "Gaming meets modern C++ - a fast and reliable entity-component system and much more. <https://github.com/skypjack/entt>", "description": "The package entt provides CMake targets:\r\n\r\n    find_package(EnTT CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE EnTT)\r\n" },
    "openal-soft": { "name": "openal-soft", "targets": ["OpenAL::OpenAL"], "portName": "openal-soft", "portDescription": "OpenAL Soft is an LGPL-licensed, cross-platform, software implementation of the OpenAL 3D audio API.", "description": "The package openal-soft provides CMake targets:\r\n\r\n    find_package(openal-soft CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE OpenAL::OpenAL)\r\n" },
    "unofficial-pixman": { "name": "unofficial-pixman", "targets": ["unofficial::pixman::pixman-1"], "portName": "pixman", "portDescription": "Pixman is a low-level software library for pixel manipulation, providing features such as image compositing and trapezoid rasterization.", "description": "The package pixman provides CMake targets:\r\n\r\n    find_package(unofficial-pixman CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::pixman::pixman-1)\r\n" },
    "protobuf": { "name": "protobuf", "targets": ["protobuf::libprotobuf", "protobuf::libprotoc"], "portName": "protobuf", "portDescription": "Protocol Buffers - Google's data interchange format", "description": "The package protobuf provides CMake targets:\r\n\r\n    find_package(protobuf CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE protobuf::libprotobuf protobuf::libprotoc)\r\n" },
    "docopt": { "name": "docopt", "targets": ["docopt"], "portName": "docopt", "portDescription": "Command line arguments parser that will make you smile (C++11 port).", "description": "The package docopt provides CMake targets:\r\n\r\n    find_package(docopt CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE docopt)\r\n" },
    "ZeroMQ": { "name": "ZeroMQ", "targets": ["libzmq", "libzmq-static"], "portName": "zeromq", "portDescription": "The ZeroMQ lightweight messaging kernel is a library which extends the standard socket interfaces with features traditionally provided by specialised messaging middleware products", "description": "The package zeromq provides CMake targets:\r\n\r\n    find_package(ZeroMQ CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE libzmq libzmq-static)\r\n" },
    "WebP": { "name": "WebP", "targets": ["WebP::libwebpmux", "WebP::webp", "WebP::webpdecoder", "WebP::webpdemux"], "portName": "libwebp", "portDescription": "Lossy compression of digital photographic images.", "description": "The package libwebp provides CMake targets:\r\n\r\n    find_package(WebP CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE WebP::libwebpmux WebP::webp WebP::webpdecoder WebP::webpdemux)\r\n" },
    "unofficial-cctz": { "name": "unofficial-cctz", "targets": ["unofficial::cctz"], "portName": "cctz", "portDescription": "two libraries that cooperate with <chrono> to give C++ programmers all the necessary tools for computing with dates, times, and time zones in a simple and correct manner.", "description": "The package cctz provides CMake targets:\r\n\r\n    find_package(unofficial-cctz CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::cctz)\r\n" },
    "fmt": { "name": "fmt", "targets": ["fmt::fmt", "fmt::fmt-header-only"], "portName": "fmt", "portDescription": "Formatting library for C++. It can be used as a safe alternative to printf or as a fast alternative to IOStreams.", "description": "The package fmt provides CMake targets:\r\n\r\n    find_package(fmt CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE fmt::fmt fmt::fmt-header-only)\r\n" },
    "dlfcn-win32": { "name": "dlfcn-win32", "targets": ["dlfcn-win32::dl"], "portName": "dlfcn-win32", "portDescription": "dlfcn-win32 is an implementation of dlfcn for Windows.", "description": "The package dlfcn-win32 provides CMake targets:\r\n\r\n    find_package(dlfcn-win32 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE dlfcn-win32::dl)\r\n" },
    "imgui": { "name": "imgui", "targets": ["imgui::imgui"], "portName": "imgui", "portDescription": "Bloat-free Immediate Mode Graphical User interface for C++ with minimal dependencies.", "description": "The package imgui provides CMake targets:\r\n\r\n    find_package(imgui CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE imgui::imgui)\r\n" },
    "HighFive": { "name": "HighFive", "targets": ["HighFive"], "portName": "highfive", "portDescription": "HighFive is a modern C++/C++11 friendly interface for libhdf5", "description": "The package highfive provides CMake targets:\r\n\r\n    find_package(HighFive CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE HighFive)\r\n" },
    "uamqp": { "name": "uamqp", "targets": ["uamqp"], "portName": "azure-uamqp-c", "portDescription": "AMQP library for C", "description": "The package azure-uamqp-c provides CMake targets:\r\n\r\n    find_package(uamqp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE uamqp)\r\n" },
    "aws-c-common": { "name": "aws-c-common", "targets": ["AWS::aws-c-common"], "portName": "aws-c-common", "portDescription": "AWS common library for C", "description": "The package aws-c-common provides CMake targets:\r\n\r\n    find_package(aws-c-common CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE AWS::aws-c-common)\r\n" },
    "minitrace": { "name": "minitrace", "targets": ["minitrace::minitrace"], "portName": "minitrace", "portDescription": "Simple C/C++ library for producing JSON traces suitable for Chrome's built-in trace viewer.", "description": "The package minitrace provides CMake targets:\r\n\r\n    find_package(minitrace CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE minitrace::minitrace)\r\n" },
    "aws-checksums": { "name": "aws-checksums", "targets": ["AWS::aws-checksums"], "portName": "aws-checksums", "portDescription": "Cross-Platform HW accelerated CRC32c and CRC32 with fallback to efficient SW implementations.", "description": "The package aws-checksums provides CMake targets:\r\n\r\n    find_package(aws-checksums CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE AWS::aws-checksums)\r\n" },
    "wavpack": { "name": "wavpack", "targets": ["WavPack::wavpack"], "portName": "wavpack", "portDescription": "WavPack encode/decode library, command-line programs, and several plugins", "description": "The package wavpack provides CMake targets:\r\n\r\n    find_package(wavpack CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE WavPack::wavpack)\r\n" },
    "check": { "name": "check", "targets": ["check"], "portName": "check", "portDescription": "A unit testing framework for C", "description": "The package check provides CMake targets:\r\n\r\n    find_package(check CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE check)\r\n" },
    "Qt5Qml": { "name": "Qt5Qml", "targets": ["Qt5::QDebugMessageServiceFactory", "Qt5::QLocalClientConnectionFactory", "Qt5::QQmlDebugServerFactory", "Qt5::QQmlDebuggerServiceFactory", "Qt5::QQmlInspectorServiceFactory", "Qt5::QQmlNativeDebugConnectorFactory", "Qt5::QQmlNativeDebugServiceFactory", "Qt5::QQmlPreviewServiceFactory", "Qt5::QQmlProfilerServiceFactory", "Qt5::QQuickProfilerAdapterFactory", "Qt5::QTcpServerConnectionFactory", "Qt5::Qml", "Qt5::QmlPrivate"], "portName": "qt5-declarative", "portDescription": "Qt5 Declarative (Quick 2) Module. Includes QtQuick, QtQuickParticles, QtQuickWidgets, QtQml, and QtPacketProtocol.", "description": "The package qt5-declarative provides CMake targets:\r\n\r\n    find_package(Qt5Qml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QDebugMessageServiceFactory Qt5::QLocalClientConnectionFactory Qt5::QQmlDebugServerFactory Qt5::QQmlDebuggerServiceFactory Qt5::QQmlInspectorServiceFactory Qt5::QQmlNativeDebugConnectorFactory Qt5::QQmlNativeDebugServiceFactory Qt5::QQmlPreviewServiceFactory Qt5::QQmlProfilerServiceFactory Qt5::QQuickProfilerAdapterFactory Qt5::QTcpServerConnectionFactory Qt5::Qml Qt5::QmlPrivate)\r\n" },
    "Qt5Quick": { "name": "Qt5Quick", "targets": ["Qt5::QSGD3D12Adaptation", "Qt5::Quick", "Qt5::QuickPrivate"], "portName": "qt5-declarative", "portDescription": "Qt5 Declarative (Quick 2) Module. Includes QtQuick, QtQuickParticles, QtQuickWidgets, QtQml, and QtPacketProtocol.", "description": "The package qt5-declarative provides CMake targets:\r\n\r\n    find_package(Qt5Qml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QDebugMessageServiceFactory Qt5::QLocalClientConnectionFactory Qt5::QQmlDebugServerFactory Qt5::QQmlDebuggerServiceFactory Qt5::QQmlInspectorServiceFactory Qt5::QQmlNativeDebugConnectorFactory Qt5::QQmlNativeDebugServiceFactory Qt5::QQmlPreviewServiceFactory Qt5::QQmlProfilerServiceFactory Qt5::QQuickProfilerAdapterFactory Qt5::QTcpServerConnectionFactory Qt5::Qml Qt5::QmlPrivate)\r\n" },
    "Qt5QuickTest": { "name": "Qt5QuickTest", "targets": ["Qt5::QuickTest", "Qt5::QuickTestPrivate"], "portName": "qt5-declarative", "portDescription": "Qt5 Declarative (Quick 2) Module. Includes QtQuick, QtQuickParticles, QtQuickWidgets, QtQml, and QtPacketProtocol.", "description": "The package qt5-declarative provides CMake targets:\r\n\r\n    find_package(Qt5Qml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QDebugMessageServiceFactory Qt5::QLocalClientConnectionFactory Qt5::QQmlDebugServerFactory Qt5::QQmlDebuggerServiceFactory Qt5::QQmlInspectorServiceFactory Qt5::QQmlNativeDebugConnectorFactory Qt5::QQmlNativeDebugServiceFactory Qt5::QQmlPreviewServiceFactory Qt5::QQmlProfilerServiceFactory Qt5::QQuickProfilerAdapterFactory Qt5::QTcpServerConnectionFactory Qt5::Qml Qt5::QmlPrivate)\r\n" },
    "Qt5QuickWidgets": { "name": "Qt5QuickWidgets", "targets": ["Qt5::QuickWidgets", "Qt5::QuickWidgetsPrivate"], "portName": "qt5-declarative", "portDescription": "Qt5 Declarative (Quick 2) Module. Includes QtQuick, QtQuickParticles, QtQuickWidgets, QtQml, and QtPacketProtocol.", "description": "The package qt5-declarative provides CMake targets:\r\n\r\n    find_package(Qt5Qml CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QDebugMessageServiceFactory Qt5::QLocalClientConnectionFactory Qt5::QQmlDebugServerFactory Qt5::QQmlDebuggerServiceFactory Qt5::QQmlInspectorServiceFactory Qt5::QQmlNativeDebugConnectorFactory Qt5::QQmlNativeDebugServiceFactory Qt5::QQmlPreviewServiceFactory Qt5::QQmlProfilerServiceFactory Qt5::QQuickProfilerAdapterFactory Qt5::QTcpServerConnectionFactory Qt5::Qml Qt5::QmlPrivate)\r\n" },
    "MagnumExtras": { "name": "MagnumExtras", "targets": ["MagnumExtras::${_component}"], "portName": "magnum-extras", "portDescription": "Extras for magnum, C++11/C++14 graphics middleware for games and data visualization http://magnum.graphics/", "description": "The package magnum-extras provides CMake targets:\r\n\r\n    find_package(MagnumExtras CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE MagnumExtras::${_component})\r\n" },
    "EXPAT": { "name": "EXPAT", "targets": [""], "portName": "expat", "portDescription": "XML parser library written in C", "description": "The package expat is compatible with built-in CMake targets:\r\n\r\n    find_package(EXPAT REQUIRED)\r\n    target_link_libraries(main PRIVATE EXPAT::EXPAT)\r\n" },
    "GTest": { "name": "GTest", "targets": ["GTest::gmock", "GTest::gmock_main", "GTest::gtest", "GTest::gtest_main"], "portName": "gtest", "portDescription": "GoogleTest and GoogleMock testing frameworks.", "description": "The package gtest is compatible with built-in CMake targets:\r\n\r\n    enable_testing()\r\n    find_package(GTest MODULE REQUIRED)\r\n    target_link_libraries(main PRIVATE GTest::GTest GTest::Main)\r\n    add_test(AllTestsInMain main)\r\n" },
    "FreeOpcUa": { "name": "FreeOpcUa", "targets": ["opcuaclient", "opcuacore", "opcuaprotocol", "opcuaserver"], "portName": "freeopcua", "portDescription": "OPC-UA server and client library written in C++ and with a lot of code auto-generated from xml specification using python.", "description": "The package freeopcua provides CMake targets:\r\n\r\n    find_package(FreeOpcUa CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE opcuaclient opcuacore opcuaprotocol opcuaserver)\r\n" },
    "FFTW3": { "name": "FFTW3", "targets": ["FFTW3::fftw3"], "portName": "fftw3", "portDescription": "FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) in one or more dimensions, of arbitrary input size, and of both real and complex data (as well as of even/odd data, i.e. the discrete cosine/sine transforms or DCT/DST).", "description": "The package fftw3 provides CMake targets:\r\n\r\n    find_package(FFTW3 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE FFTW3::fftw3)\r\n" },
    "FFTW3f": { "name": "FFTW3f", "targets": ["FFTW3::fftw3f"], "portName": "fftw3", "portDescription": "FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) in one or more dimensions, of arbitrary input size, and of both real and complex data (as well as of even/odd data, i.e. the discrete cosine/sine transforms or DCT/DST).", "description": "The package fftw3 provides CMake targets:\r\n\r\n    find_package(FFTW3 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE FFTW3::fftw3)\r\n" },
    "FFTW3l": { "name": "FFTW3l", "targets": ["FFTW3::fftw3l"], "portName": "fftw3", "portDescription": "FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) in one or more dimensions, of arbitrary input size, and of both real and complex data (as well as of even/odd data, i.e. the discrete cosine/sine transforms or DCT/DST).", "description": "The package fftw3 provides CMake targets:\r\n\r\n    find_package(FFTW3 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE FFTW3::fftw3)\r\n" },
    "TBB": { "name": "TBB", "targets": ["TBB::${_tbb_component}"], "portName": "tbb", "portDescription": "Intel's Threading Building Blocks.", "description": "The package tbb provides CMake targets:\r\n\r\n    find_package(TBB CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE TBB::tbb)\r\n" },
    "glbinding": { "name": "glbinding", "targets": ["glbinding::glbinding"], "portName": "glbinding", "portDescription": "glbinding is an MIT licensed, cross-platform C++ binding for the OpenGL API", "description": "The package glbinding provides CMake targets:\r\n\r\n    find_package(glbinding CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE glbinding::glbinding)\r\n" },
    "glbinding-aux": { "name": "glbinding-aux", "targets": ["glbinding::glbinding-aux"], "portName": "glbinding", "portDescription": "glbinding is an MIT licensed, cross-platform C++ binding for the OpenGL API", "description": "The package glbinding provides CMake targets:\r\n\r\n    find_package(glbinding CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE glbinding::glbinding)\r\n" },
    "LibCDS": { "name": "LibCDS", "targets": ["LibCDS::cds"], "portName": "libcds", "portDescription": "a collection of concurrent containers that don't require external (manual) synchronization for shared access, and safe memory reclamation (SMR) algorithms like Hazard Pointer and user-space RCU that is used as an epoch-based SMR.", "description": "The package libcds provides CMake targets:\r\n\r\n    find_package(LibCDS CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE LibCDS::cds)\r\n" },
    "OpenMVG": { "name": "OpenMVG", "targets": ["OpenMVG::openMVG_camera", "OpenMVG::openMVG_easyexif", "OpenMVG::openMVG_exif", "OpenMVG::openMVG_fast", "OpenMVG::openMVG_features", "OpenMVG::openMVG_geodesy", "OpenMVG::openMVG_geometry", "OpenMVG::openMVG_graph", "OpenMVG::openMVG_image", "OpenMVG::openMVG_kvld", "OpenMVG::openMVG_lInftyComputerVision", "OpenMVG::openMVG_linearProgramming", "OpenMVG::openMVG_matching", "OpenMVG::openMVG_matching_image_collection", "OpenMVG::openMVG_multiview", "OpenMVG::openMVG_numeric", "OpenMVG::openMVG_robust_estimation", "OpenMVG::openMVG_sfm", "OpenMVG::openMVG_stlplus", "OpenMVG::openMVG_system", "OpenMVG::vlsift"], "portName": "openmvg", "portDescription": "open Multiple View Geometry library. Basis for 3D computer vision and Structure from Motion.", "description": "The package openmvg provides CMake targets:\r\n\r\n    find_package(OpenMVG CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE OpenMVG::openMVG_camera OpenMVG::openMVG_easyexif OpenMVG::openMVG_exif OpenMVG::openMVG_fast OpenMVG::openMVG_features OpenMVG::openMVG_geodesy OpenMVG::openMVG_geometry OpenMVG::openMVG_graph OpenMVG::openMVG_image OpenMVG::openMVG_kvld OpenMVG::openMVG_lInftyComputerVision OpenMVG::openMVG_linearProgramming OpenMVG::openMVG_matching OpenMVG::openMVG_matching_image_collection OpenMVG::openMVG_multiview OpenMVG::openMVG_numeric OpenMVG::openMVG_robust_estimation OpenMVG::openMVG_sfm OpenMVG::openMVG_stlplus OpenMVG::openMVG_system OpenMVG::vlsift)\r\n" },
    "wt": { "name": "wt", "targets": ["Wt::Dbo", "Wt::DboMSSQLServer", "Wt::DboPostgres", "Wt::DboSqlite3", "Wt::HTTP", "Wt::Isapi", "Wt::Wt"], "portName": "wt", "portDescription": "Wt is a C++ library for developing web applications", "description": "The package wt provides CMake targets:\r\n\r\n    find_package(wt CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Wt::Dbo Wt::DboMSSQLServer Wt::DboPostgres Wt::DboSqlite3 Wt::HTTP Wt::Isapi Wt::Wt)\r\n" },
    "Ceres": { "name": "Ceres", "targets": ["ceres"], "portName": "ceres", "portDescription": "non-linear optimization package", "description": "The package ceres provides CMake targets:\r\n\r\n    find_package(Ceres CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ceres)\r\n" },
    "FTGL": { "name": "FTGL", "targets": ["ftgl"], "portName": "ftgl", "portDescription": "FTGL is a free open source library to enable developers to use arbitrary fonts in their OpenGL (www.opengl.org) applications.\n  Unlike other OpenGL font libraries FTGL uses standard font file formats so doesn't need a preprocessing step to convert the high quality font data into a lesser quality, proprietary format.\n  FTGL uses the Freetype (www.freetype.org) font library to open and 'decode' the fonts. It then takes that output and stores it in a format most efficient for OpenGL rendering.", "description": "The package ftgl provides CMake targets:\r\n\r\n    find_package(FTGL CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ftgl)\r\n" },
    "xeus": { "name": "xeus", "targets": ["LibUUID::LibUUID", "xeus"], "portName": "xeus", "portDescription": "C++ implementation of the Jupyter kernel protocol", "description": "The package xeus provides CMake targets:\r\n\r\n    find_package(xeus CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE xeus)\r\n" },
    "jsoncpp": { "name": "jsoncpp", "targets": ["jsoncpp_lib"], "portName": "jsoncpp", "portDescription": "jsoncpp is an implementation of a JSON reader and writer in C++. JSON (JavaScript Object Notation) is a lightweight data-interchange format that it is easy to parse and redeable for human.", "description": "The package jsoncpp provides CMake targets:\r\n\r\n    find_package(jsoncpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE jsoncpp_lib)\r\n" },
    "Crc32c": { "name": "Crc32c", "targets": ["Crc32c::crc32c"], "portName": "crc32c", "portDescription": "CRC32C implementation with support for CPU-specific acceleration instructions.", "description": "The package crc32c provides CMake targets:\r\n\r\n    find_package(Crc32c CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Crc32c::crc32c)\r\n" },
    "Qt5QuickControls2": { "name": "Qt5QuickControls2", "targets": ["Qt5::QuickControls2", "Qt5::QuickControls2Private"], "portName": "qt5-quickcontrols2", "portDescription": "Qt5 QuickControls2 Module.", "description": "The package qt5-quickcontrols2 provides CMake targets:\r\n\r\n    find_package(Qt5QuickControls2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QuickControls2 Qt5::QuickControls2Private)\r\n" },
    "cppzmq": { "name": "cppzmq", "targets": ["cppzmq", "cppzmq-static"], "portName": "cppzmq", "portDescription": "lightweight messaging kernel, C++ bindings", "description": "The package cppzmq provides CMake targets:\r\n\r\n    find_package(cppzmq CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cppzmq cppzmq-static)\r\n" },
    "pybind11": { "name": "pybind11", "targets": ["${target_name}", "mylib", "pybind11::embed", "pybind11::module", "pybind11::pybind11"], "portName": "pybind11", "portDescription": "pybind11 is a lightweight header-only library that exposes C++ types in Python and vice versa, mainly to create Python bindings of existing C++ code.", "description": "The package pybind11 provides CMake targets:\r\n\r\n    find_package(pybind11 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${target_name} mylib pybind11::embed pybind11::module pybind11::pybind11)\r\n" },
    "xsimd": { "name": "xsimd", "targets": ["xsimd"], "portName": "xsimd", "portDescription": "Modern, portable C++ wrappers for SIMD intrinsics", "description": "The package xsimd provides CMake targets:\r\n\r\n    find_package(xsimd CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE xsimd)\r\n" },
    "Libssh2": { "name": "Libssh2", "targets": ["Libssh2::libssh2"], "portName": "libssh2", "portDescription": "The SSH library", "description": "The package libssh2 provides CMake targets:\r\n\r\n    find_package(Libssh2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Libssh2::libssh2)\r\n" },
    "GLUT": { "name": "GLUT", "targets": [""], "portName": "freeglut", "portDescription": "Open source implementation of GLUT with source and binary backwards compatibility.", "description": "The package freeglut is compatible with built-in CMake targets:\r\n\r\n    find_package(GLUT REQUIRED)\r\n    target_link_libraries(main PRIVATE GLUT::GLUT)\r\n" },
    "Sqlpp11": { "name": "Sqlpp11", "targets": ["HinnantDate::Date", "sqlpp11"], "portName": "sqlpp11", "portDescription": "A type safe embedded domain specific language for SQL queries and results in C++.", "description": "The package sqlpp11 provides CMake targets:\r\n\r\n    find_package(Sqlpp11 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE HinnantDate::Date sqlpp11)\r\n" },
    "azure_c_shared_utility": { "name": "azure_c_shared_utility", "targets": ["${whatIsBuilding}_dll", "${whatIsBuilding}_dll", "${whatIsBuilding}_testsonly_lib", "aziotsharedutil"], "portName": "azure-c-shared-utility", "portDescription": "Azure C SDKs common code", "description": "The package azure-c-shared-utility provides CMake targets:\r\n\r\n    find_package(azure_c_shared_utility CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${whatIsBuilding}_dll ${whatIsBuilding}_dll ${whatIsBuilding}_testsonly_lib aziotsharedutil)\r\n" },
    "Corrade": { "name": "Corrade", "targets": ["${plugin_name}", "${plugin_name}", "${plugin_name}", "${test_name}", "Corrade::${_component}", "Corrade::${_component}"], "portName": "corrade", "portDescription": "C++11/C++14 multiplatform utility library http://magnum.graphics/corrade/", "description": "The package corrade provides CMake targets:\r\n\r\n    find_package(Corrade CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ${plugin_name} ${plugin_name} ${plugin_name} ${test_name} Corrade::${_component} Corrade::${_component})\r\n" },
    "kangaru": { "name": "kangaru", "targets": ["kangaru"], "portName": "kangaru", "portDescription": "A dependency injection container for C++11, C++14 and later", "description": "The package kangaru provides CMake targets:\r\n\r\n    find_package(kangaru CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE kangaru)\r\n" },
    "VXL": { "name": "VXL", "targets": ["clipper", "netlib", "openjpeg2", "rply", "testlib", "v3p_netlib", "vbl", "vbl_io", "vcl", "vcsl", "vgl", "vgl_algo", "vgl_io", "vgl_xio", "vil", "vil1", "vil_algo", "vil_io", "vnl", "vnl_algo", "vnl_io", "vnl_xio", "vpgl", "vpgl_algo", "vpgl_file_formats", "vpgl_io", "vpgl_xio", "vpl", "vsl", "vul", "vul_io"], "portName": "vxl", "portDescription": "A multi-platform collection of C++ software libraries for Computer Vision and Image Understanding.", "description": "The package vxl provides CMake targets:\r\n\r\n    find_package(VXL CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE clipper netlib openjpeg2 rply testlib v3p_netlib vbl vbl_io vcl vcsl vgl vgl_algo vgl_io vgl_xio vil vil1 vil_algo vil_io vnl vnl_algo vnl_io vnl_xio vpgl vpgl_algo vpgl_file_formats vpgl_io vpgl_xio vpl vsl vul vul_io)\r\n" },
    "stlab": { "name": "stlab", "targets": ["stlab::coroutines", "stlab::stlab"], "portName": "stlab", "portDescription": "\n  stlab is the ongoing work of what was Adobe’s Software Technology Lab.\n  The Concurrency library provides futures and channels, high level constructs for implementing algorithms that eases the use of multiple CPU cores while minimizing contention. This library solves several problems of the C++11 and C++17 TS futures.", "description": "The package stlab provides CMake targets:\r\n\r\n    find_package(stlab CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE stlab::coroutines stlab::stlab)\r\n" },
    "selene": { "name": "selene", "targets": ["selene::selene", "selene::selene_base", "selene::selene_base_io", "selene::selene_img", "selene::selene_img_io", "selene::selene_img_io_jpeg", "selene::selene_img_io_png", "selene::selene_img_io_tiff", "selene::selene_img_ops"], "portName": "selene", "portDescription": "A C++17 image representation, processing and I/O library.", "description": "The package selene provides CMake targets:\r\n\r\n    find_package(selene CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE selene::selene selene::selene_base selene::selene_base_io selene::selene_img selene::selene_img_io selene::selene_img_io_jpeg selene::selene_img_io_png selene::selene_img_io_tiff selene::selene_img_ops)\r\n" },
    "prometheus-cpp": { "name": "prometheus-cpp", "targets": ["prometheus-cpp::core", "prometheus-cpp::pull"], "portName": "prometheus-cpp", "portDescription": "Prometheus Client Library for Modern C++", "description": "The package prometheus-cpp provides CMake targets:\r\n\r\n    find_package(prometheus-cpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE prometheus-cpp::core prometheus-cpp::pull)\r\n" },
    "pthreads": { "name": "pthreads", "targets": ["pthreads"], "portName": "pthreads", "portDescription": "pthreads for windows", "description": "The package pthreads provides CMake targets:\r\n\r\n    find_package(pthreads CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE pthreads)\r\n" },
    "plplot": { "name": "plplot", "targets": ["csirocsa", "plplot", "plplotcxx", "qsastime"], "portName": "plplot", "portDescription": "PLplot is a cross-platform software package for creating scientific plots whose (UTF-8) plot symbols and text are limited in practice only by what Unicode-aware system fonts are installed on a user's computer.", "description": "The package plplot provides CMake targets:\r\n\r\n    find_package(plplot CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE csirocsa plplot plplotcxx qsastime)\r\n" },
    "libics": { "name": "libics", "targets": ["libics", "libics_cpp"], "portName": "libics", "portDescription": "Reference library for ICS (Image Cytometry Standard), an open standard for writing images of any dimensionality and data type to file, together with associated information regarding the recording equipment or recorded subject.", "description": "The package libics provides CMake targets:\r\n\r\n    find_package(libics CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE libics libics_cpp)\r\n" },
    "Alembic": { "name": "Alembic", "targets": ["Alembic::Alembic"], "portName": "alembic", "portDescription": "Alembic is an open framework for storing and sharing scene data that includes a C++ library, a file format, and client plugins and applications. http://alembic.io/", "description": "The package alembic provides CMake targets:\r\n\r\n    find_package(Alembic CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Alembic::Alembic)\r\n" },
    "cppgraphqlgen": { "name": "cppgraphqlgen", "targets": ["cppgraphqlgen::graphqljson", "cppgraphqlgen::graphqlservice"], "portName": "cppgraphqlgen", "portDescription": "C++ GraphQL schema service generator", "description": "The package cppgraphqlgen provides CMake targets:\r\n\r\n    find_package(cppgraphqlgen CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cppgraphqlgen::graphqljson cppgraphqlgen::graphqlservice)\r\n" },
    "json-dto": { "name": "json-dto", "targets": ["json-dto::json-dto"], "portName": "json-dto", "portDescription": "A small header-only library for converting data between json representation and c++ structs.", "description": "The package json-dto provides CMake targets:\r\n\r\n    find_package(json-dto CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE json-dto::json-dto)\r\n" },
    "unofficial-glib": { "name": "unofficial-glib", "targets": ["unofficial::glib::gio", "unofficial::glib::glib", "unofficial::glib::gmodule", "unofficial::glib::gobject", "unofficial::glib::gthread"], "portName": "glib", "portDescription": "Portable, general-purpose utility library.", "description": "The package glib provides CMake targets:\r\n\r\n    find_package(unofficial-glib CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::glib::gio unofficial::glib::glib unofficial::glib::gmodule unofficial::glib::gobject unofficial::glib::gthread)\r\n" },
    "unofficial-angle": { "name": "unofficial-angle", "targets": ["unofficial::angle::libEGL", "unofficial::angle::libGLESv2"], "portName": "angle", "portDescription": "A conformant OpenGL ES implementation for Windows, Mac and Linux.\n  The goal of ANGLE is to allow users of multiple operating systems to seamlessly run WebGL and other OpenGL ES content by translating OpenGL ES API calls to one of the hardware-supported APIs available for that platform. ANGLE currently provides translation from OpenGL ES 2.0 and 3.0 to desktop OpenGL, OpenGL ES, Direct3D 9, and Direct3D 11. Support for translation from OpenGL ES to Vulkan is underway, and future plans include compute shader support (ES 3.1) and MacOS support.", "description": "The package angle provides CMake targets:\r\n\r\n    find_package(unofficial-angle CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::angle::libEGL unofficial::angle::libGLESv2)\r\n" },
    "units": { "name": "units", "targets": ["units"], "portName": "units", "portDescription": "A compile-time, header-only, dimensional analysis and unit conversion library built on c++14 with no dependencies. ", "description": "The package units provides CMake targets:\r\n\r\n    find_package(units CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE units)\r\n" },
    "sqlite3": { "name": "sqlite3", "targets": ["sqlite3"], "portName": "sqlite3", "portDescription": "SQLite is a software library that implements a self-contained, serverless, zero-configuration, transactional SQL database engine.", "description": "The package sqlite3 provides CMake targets:\r\n\r\n    find_package(sqlite3 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE sqlite3)\r\n" },
    "ms-angle": { "name": "ms-angle", "targets": ["ms-angle::libEGL", "ms-angle::libGLESv2"], "portName": "ms-angle", "portDescription": "The UWP version of a conformant OpenGL ES implementation for Windows, Mac and Linux.\n  The goal of ANGLE is to allow users of multiple operating systems to seamlessly run WebGL and other OpenGL ES content by translating OpenGL ES API calls to one of the hardware-supported APIs available for that platform. ANGLE currently provides translation from OpenGL ES 2.0 and 3.0 to desktop OpenGL, OpenGL ES, Direct3D 9, and Direct3D 11. Support for translation from OpenGL ES to Vulkan is underway, and future plans include compute shader support (ES 3.1) and MacOS support.", "description": "The package ms-angle provides CMake targets:\r\n\r\n    find_package(ms-angle CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE ms-angle::libEGL ms-angle::libGLESv2)\r\n" },
    "Qt5Designer": { "name": "Qt5Designer", "targets": ["Qt5::Designer", "Qt5::DesignerPrivate", "Qt5::QQuickWidgetPlugin"], "portName": "qt5-tools", "portDescription": "Qt5 Tools Module; Includes deployment tools and helpers, Qt Designer, Assistant, and other applications", "description": "The package qt5-tools provides CMake targets:\r\n\r\n    find_package(Qt5Designer CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Designer Qt5::DesignerPrivate Qt5::QQuickWidgetPlugin)\r\n" },
    "Qt5Help": { "name": "Qt5Help", "targets": ["Qt5::Help", "Qt5::HelpPrivate"], "portName": "qt5-tools", "portDescription": "Qt5 Tools Module; Includes deployment tools and helpers, Qt Designer, Assistant, and other applications", "description": "The package qt5-tools provides CMake targets:\r\n\r\n    find_package(Qt5Designer CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Designer Qt5::DesignerPrivate Qt5::QQuickWidgetPlugin)\r\n" },
    "Qt5UiPlugin": { "name": "Qt5UiPlugin", "targets": ["Qt5::UiPlugin", "Qt5::UiPluginPrivate"], "portName": "qt5-tools", "portDescription": "Qt5 Tools Module; Includes deployment tools and helpers, Qt Designer, Assistant, and other applications", "description": "The package qt5-tools provides CMake targets:\r\n\r\n    find_package(Qt5Designer CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Designer Qt5::DesignerPrivate Qt5::QQuickWidgetPlugin)\r\n" },
    "Qt5UiTools": { "name": "Qt5UiTools", "targets": ["Qt5::UiTools", "Qt5::UiToolsPrivate"], "portName": "qt5-tools", "portDescription": "Qt5 Tools Module; Includes deployment tools and helpers, Qt Designer, Assistant, and other applications", "description": "The package qt5-tools provides CMake targets:\r\n\r\n    find_package(Qt5Designer CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Designer Qt5::DesignerPrivate Qt5::QQuickWidgetPlugin)\r\n" },
    "FMI4cpp": { "name": "FMI4cpp", "targets": ["FMI4cpp::FMI4cpp", "LIBZIP::LIBZIP"], "portName": "fmi4cpp", "portDescription": "FMI 2.0 implementation written in modern C++", "description": "The package fmi4cpp provides CMake targets:\r\n\r\n    find_package(FMI4cpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE FMI4cpp::FMI4cpp LIBZIP::LIBZIP)\r\n" },
    "glm": { "name": "glm", "targets": ["glm"], "portName": "glm", "portDescription": "OpenGL Mathematics (GLM) https://glm.g-truc.net", "description": "The package glm provides CMake targets:\r\n\r\n    find_package(glm CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE glm)\r\n" },
    "suitesparse-5.1.2": { "name": "suitesparse-5.1.2", "targets": ["SuiteSparse::amd", "SuiteSparse::btf", "SuiteSparse::camd", "SuiteSparse::ccolamd", "SuiteSparse::cholmod", "SuiteSparse::colamd", "SuiteSparse::cxsparse", "SuiteSparse::klu", "SuiteSparse::ldl", "SuiteSparse::spqr", "SuiteSparse::suitesparseconfig", "SuiteSparse::umfpack"], "portName": "suitesparse", "portDescription": "algebra library", "description": "The package suitesparse provides CMake targets:\r\n\r\n    find_package(suitesparse-5.1.2 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE SuiteSparse::amd SuiteSparse::btf SuiteSparse::camd SuiteSparse::ccolamd SuiteSparse::cholmod SuiteSparse::colamd SuiteSparse::cxsparse SuiteSparse::klu SuiteSparse::ldl SuiteSparse::spqr SuiteSparse::suitesparseconfig SuiteSparse::umfpack)\r\n" },
    "Tesseract": { "name": "Tesseract", "targets": ["libtesseract"], "portName": "tesseract", "portDescription": "An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.", "description": "The package tesseract provides CMake targets:\r\n\r\n    find_package(Tesseract CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE libtesseract)\r\n" },
    "LSL": { "name": "LSL", "targets": ["LSL::lsl", "LSL::lsl"], "portName": "liblsl", "portDescription": "C++ lsl library for multi-modal time-synched data transmission over the local network", "description": "The package liblsl provides CMake targets:\r\n\r\n    find_package(LSL CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE LSL::lsl LSL::lsl)\r\n" },
    "freetype": { "name": "freetype", "targets": ["freetype"], "portName": "freetype", "portDescription": "A library to render fonts.", "description": "The package freetype is compatible with built-in CMake targets:\r\n\r\n    find_package(Freetype REQUIRED)\r\n    target_link_libraries(main PRIVATE Freetype::Freetype)\r\n" },
    "unofficial-curlpp": { "name": "unofficial-curlpp", "targets": ["unofficial::curlpp::curlpp"], "portName": "curlpp", "portDescription": "C++ wrapper around libcURL", "description": "The package curlpp provides CMake targets:\r\n\r\n    find_package(unofficial-curlpp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::curlpp::curlpp)\r\n" },
    "libgo": { "name": "libgo", "targets": [""], "portName": "libgo", "portDescription": "The best stackful coroutine by c++11.", "description": "The package libgo provides CMake integration:\r\n\r\n    find_package(libgo REQUIRED)\r\n    target_include_directories(main PRIVATE ${LIBGO_INCLUDE_DIRS})\r\n    target_link_libraries(main PRIVATE ${LIBGO_LIBRARIES})\r\n" },
    "cryptopp": { "name": "cryptopp", "targets": ["cryptopp-static"], "portName": "cryptopp", "portDescription": "Crypto++ is a free C++ class library of cryptographic schemes.", "description": "The package cryptopp provides CMake targets:\r\n\r\n    find_package(cryptopp CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE cryptopp-static)\r\n" },
    "odb": { "name": "odb", "targets": ["odb::libodb-boost"], "portName": "libodb-boost", "portDescription": "Description: Boost support for the ODB ORM library", "description": "The package libodb-boost provides CMake targets:\r\n\r\n    find_package(odb CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE odb::libodb-boost)\r\n" },
    "clBLAS": { "name": "clBLAS", "targets": ["clBLAS"], "portName": "clblas", "portDescription": "clBLAS is an OpenCL 1.2 accelerated BLAS (Basic Linear Algebra Subsystem) library.", "description": "The package clblas provides CMake targets:\r\n\r\n    find_package(clBLAS CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE clBLAS)\r\n" },
    "glslang": { "name": "glslang", "targets": ["glslang::HLSL", "glslang::OGLCompiler", "glslang::OSDependent", "glslang::SPIRV", "glslang::glslang"], "portName": "glslang", "portDescription": "Khronos reference front-end for GLSL and ESSL, and sample SPIR-V generator", "description": "The package glslang provides CMake targets:\r\n\r\n    find_package(glslang CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE glslang::HLSL glslang::OGLCompiler glslang::OSDependent glslang::SPIRV glslang::glslang)\r\n" },
    "tmx": { "name": "tmx", "targets": ["tmx", "tmx_shared"], "portName": "tmx", "portDescription": "A portable C library to load tiled maps in your games.", "description": "The package tmx provides CMake targets:\r\n\r\n    find_package(tmx CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tmx tmx_shared)\r\n" },
    "Qt5Bluetooth": { "name": "Qt5Bluetooth", "targets": ["Qt5::Bluetooth", "Qt5::BluetoothPrivate"], "portName": "qt5-connectivity", "portDescription": "Qt5 Connectivity module - Provides access to Bluetooth and NFC hardware", "description": "The package qt5-connectivity provides CMake targets:\r\n\r\n    find_package(Qt5Bluetooth CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Bluetooth Qt5::BluetoothPrivate)\r\n" },
    "Qt5Nfc": { "name": "Qt5Nfc", "targets": ["Qt5::Nfc", "Qt5::NfcPrivate"], "portName": "qt5-connectivity", "portDescription": "Qt5 Connectivity module - Provides access to Bluetooth and NFC hardware", "description": "The package qt5-connectivity provides CMake targets:\r\n\r\n    find_package(Qt5Bluetooth CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::Bluetooth Qt5::BluetoothPrivate)\r\n" },
    "Qt5AxBase": { "name": "Qt5AxBase", "targets": ["Qt5::AxBase", "Qt5::AxBasePrivate"], "portName": "qt5-activeqt", "portDescription": "Qt5 ActiveQt Module - ActiveX components", "description": "The package qt5-activeqt provides CMake targets:\r\n\r\n    find_package(Qt5AxBase CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::AxBase Qt5::AxBasePrivate)\r\n" },
    "Qt5AxContainer": { "name": "Qt5AxContainer", "targets": ["Qt5::AxContainer", "Qt5::AxContainerPrivate"], "portName": "qt5-activeqt", "portDescription": "Qt5 ActiveQt Module - ActiveX components", "description": "The package qt5-activeqt provides CMake targets:\r\n\r\n    find_package(Qt5AxBase CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::AxBase Qt5::AxBasePrivate)\r\n" },
    "Qt5AxServer": { "name": "Qt5AxServer", "targets": ["Qt5::AxServer", "Qt5::AxServerPrivate"], "portName": "qt5-activeqt", "portDescription": "Qt5 ActiveQt Module - ActiveX components", "description": "The package qt5-activeqt provides CMake targets:\r\n\r\n    find_package(Qt5AxBase CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::AxBase Qt5::AxBasePrivate)\r\n" },
    "double-conversion": { "name": "double-conversion", "targets": ["double-conversion::double-conversion"], "portName": "double-conversion", "portDescription": "Efficient binary-decimal and decimal-binary conversion routines for IEEE doubles.", "description": "The package double-conversion provides CMake targets:\r\n\r\n    find_package(double-conversion CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE double-conversion::double-conversion)\r\n" },
    "Eigen3": { "name": "Eigen3", "targets": ["Eigen3::Eigen"], "portName": "eigen3", "portDescription": "C++ template library for linear algebra: matrices, vectors, numerical solvers, and related algorithms.", "description": "The package eigen3 provides CMake targets:\r\n\r\n    find_package(Eigen3 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Eigen3::Eigen)\r\n" },
    "celero": { "name": "celero", "targets": ["celero"], "portName": "celero", "portDescription": "Celero is a modern cross-platform (Windows, Linux, MacOS) Microbenchmarking library for C++.", "description": "The package celero provides CMake targets:\r\n\r\n    find_package(celero CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE celero)\r\n" },
    "bigtable_client": { "name": "bigtable_client", "targets": ["bigtable::client", "bigtable::protos", "bigtable_client", "bigtable_common_options", "bigtable_protos"], "portName": "google-cloud-cpp", "portDescription": "C++ Client Libraries for Google Cloud Platform APIs.", "description": "The package google-cloud-cpp provides CMake targets:\r\n\r\n    find_package(bigtable_client CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE bigtable::client bigtable::protos bigtable_client bigtable_common_options bigtable_protos)\r\n" },
    "firestore_client": { "name": "firestore_client", "targets": ["firestore::client", "firestore_client", "firestore_common_options"], "portName": "google-cloud-cpp", "portDescription": "C++ Client Libraries for Google Cloud Platform APIs.", "description": "The package google-cloud-cpp provides CMake targets:\r\n\r\n    find_package(bigtable_client CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE bigtable::client bigtable::protos bigtable_client bigtable_common_options bigtable_protos)\r\n" },
    "google_cloud_cpp_common": { "name": "google_cloud_cpp_common", "targets": ["google_cloud_cpp_common", "google_cloud_cpp_common_options"], "portName": "google-cloud-cpp", "portDescription": "C++ Client Libraries for Google Cloud Platform APIs.", "description": "The package google-cloud-cpp provides CMake targets:\r\n\r\n    find_package(bigtable_client CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE bigtable::client bigtable::protos bigtable_client bigtable_common_options bigtable_protos)\r\n" },
    "storage_client": { "name": "storage_client", "targets": ["CURL::CURL", "nlohmann_json", "storage_client", "storage_common_options"], "portName": "google-cloud-cpp", "portDescription": "C++ Client Libraries for Google Cloud Platform APIs.", "description": "The package google-cloud-cpp provides CMake targets:\r\n\r\n    find_package(bigtable_client CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE bigtable::client bigtable::protos bigtable_client bigtable_common_options bigtable_protos)\r\n" },
    "fastrtps": { "name": "fastrtps", "targets": ["fastrtps", "fastrtps_static"], "portName": "fastrtps", "portDescription": "Eprosima Fast RTPS is a C++ implementation of the RTPS (Real Time Publish Subscribe) protocol, which provides publisher-subscriber communications over unreliable transports such as UDP, as defined and maintained by the Object Management Group (OMG) consortium.", "description": "The package fastrtps provides CMake targets:\r\n\r\n    find_package(fastrtps CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE fastrtps fastrtps_static)\r\n" },
    "lmdb": { "name": "lmdb", "targets": ["lmdb"], "portName": "lmdb", "portDescription": "LMDB is an extraordinarily fast, memory-efficient database", "description": "The package lmdb provides CMake targets:\r\n\r\n    find_package(lmdb CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE lmdb)\r\n" },
    "c-ares": { "name": "c-ares", "targets": ["c-ares::cares", "c-ares::cares_shared", "c-ares::cares_static"], "portName": "c-ares", "portDescription": "A C library for asynchronous DNS requests", "description": "The package c-ares provides CMake targets:\r\n\r\n    find_package(c-ares CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE c-ares::cares c-ares::cares_shared c-ares::cares_static)\r\n" },
    "OpenCL": { "name": "OpenCL", "targets": [""], "portName": "opencl", "portDescription": "C/C++ headers and ICD loader (Installable Client Driver) for OpenCL", "description": "The package opencl is compatible with built-in CMake targets:\n\n    find_package(OpenCL REQUIRED)\n    target_link_libraries(main PRIVATE ${OpenCL_LIBRARIES})\n    target_include_directories(main PRIVATE ${OpenCL_INCLUDE_DIRS})\n\nYou will also need to install an appropriate driver package from your CPU/GPU manufacturer.\n" },
    "Qt5Location": { "name": "Qt5Location", "targets": ["Qt5::GeoServiceProviderFactoryEsri", "Qt5::Location", "Qt5::LocationPrivate", "Qt5::QGeoServiceProviderFactoryItemsOverlay", "Qt5::QGeoServiceProviderFactoryMapbox", "Qt5::QGeoServiceProviderFactoryNokia", "Qt5::QGeoServiceProviderFactoryOsm"], "portName": "qt5-location", "portDescription": "Qt5 Location Module - Displays map, navigation, and place content in a QML application.", "description": "The package qt5-location provides CMake targets:\r\n\r\n    find_package(Qt5Location CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::GeoServiceProviderFactoryEsri Qt5::Location Qt5::LocationPrivate Qt5::QGeoServiceProviderFactoryItemsOverlay Qt5::QGeoServiceProviderFactoryMapbox Qt5::QGeoServiceProviderFactoryNokia Qt5::QGeoServiceProviderFactoryOsm)\r\n" },
    "Qt5Positioning": { "name": "Qt5Positioning", "targets": ["Qt5::Positioning", "Qt5::PositioningPrivate", "Qt5::QGeoPositionInfoSourceFactoryPoll", "Qt5::QGeoPositionInfoSourceFactoryWinRT"], "portName": "qt5-location", "portDescription": "Qt5 Location Module - Displays map, navigation, and place content in a QML application.", "description": "The package qt5-location provides CMake targets:\r\n\r\n    find_package(Qt5Location CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::GeoServiceProviderFactoryEsri Qt5::Location Qt5::LocationPrivate Qt5::QGeoServiceProviderFactoryItemsOverlay Qt5::QGeoServiceProviderFactoryMapbox Qt5::QGeoServiceProviderFactoryNokia Qt5::QGeoServiceProviderFactoryOsm)\r\n" },
    "Qt5PositioningQuick": { "name": "Qt5PositioningQuick", "targets": ["Qt5::PositioningQuick", "Qt5::PositioningQuickPrivate"], "portName": "qt5-location", "portDescription": "Qt5 Location Module - Displays map, navigation, and place content in a QML application.", "description": "The package qt5-location provides CMake targets:\r\n\r\n    find_package(Qt5Location CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::GeoServiceProviderFactoryEsri Qt5::Location Qt5::LocationPrivate Qt5::QGeoServiceProviderFactoryItemsOverlay Qt5::QGeoServiceProviderFactoryMapbox Qt5::QGeoServiceProviderFactoryNokia Qt5::QGeoServiceProviderFactoryOsm)\r\n" },
    "OpenJPEG": { "name": "OpenJPEG", "targets": ["openjp2"], "portName": "openjpeg", "portDescription": "JPEG 2000 image library", "description": "The package openjpeg provides CMake targets:\r\n\r\n    find_package(OpenJPEG CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE openjp2)\r\n" },
    "libcuckoo": { "name": "libcuckoo", "targets": ["libcuckoo"], "portName": "libcuckoo", "portDescription": "A high-performance, concurrent hash table", "description": "The package libcuckoo provides CMake targets:\r\n\r\n    find_package(libcuckoo CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE libcuckoo)\r\n" },
    "mio": { "name": "mio", "targets": ["mio::mio", "mio::mio_base", "mio::mio_full_winapi"], "portName": "mio", "portDescription": "Cross-platform header-only C++11 library for memory mapped file IO.", "description": "The package mio provides CMake targets:\r\n\r\n    find_package(mio CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE mio::mio mio::mio_base mio::mio_full_winapi)\r\n" },
    "tsl-hopscotch-map": { "name": "tsl-hopscotch-map", "targets": ["tsl::hopscotch_map"], "portName": "tsl-hopscotch-map", "portDescription": "C++ implementation of a fast hash map and hash set using hopscotch hashing ", "description": "The package tsl-hopscotch-map provides CMake targets:\r\n\r\n    find_package(tsl-hopscotch-map CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tsl::hopscotch_map)\r\n" },
    "glog": { "name": "glog", "targets": ["glog::glog"], "portName": "glog", "portDescription": "C++ implementation of the Google logging module", "description": "The package glog provides CMake targets:\r\n\r\n    find_package(glog CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE glog::glog)\r\n" },
    "fcl": { "name": "fcl", "targets": ["fcl"], "portName": "fcl", "portDescription": "a library for performing three types of proximity queries on a pair of geometric models composed of triangles", "description": "The package fcl provides CMake targets:\r\n\r\n    find_package(fcl CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE fcl)\r\n" },
    "gcem": { "name": "gcem", "targets": ["gcem"], "portName": "gcem", "portDescription": "A C++ compile-time math library using generalized constant expressions", "description": "The package gcem provides CMake targets:\r\n\r\n    find_package(gcem CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE gcem)\r\n" },
    "Qt53DAnimation": { "name": "Qt53DAnimation", "targets": ["Qt5::3DAnimation", "Qt5::3DAnimationPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DCore": { "name": "Qt53DCore", "targets": ["Qt5::3DCore", "Qt5::3DCorePrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DExtras": { "name": "Qt53DExtras", "targets": ["Qt5::3DExtras", "Qt5::3DExtrasPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DInput": { "name": "Qt53DInput", "targets": ["Qt5::3DInput", "Qt5::3DInputPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DLogic": { "name": "Qt53DLogic", "targets": ["Qt5::3DLogic", "Qt5::3DLogicPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DQuick": { "name": "Qt53DQuick", "targets": ["Qt5::3DQuick", "Qt5::3DQuickPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DQuickAnimation": { "name": "Qt53DQuickAnimation", "targets": ["Qt5::3DQuickAnimation", "Qt5::3DQuickAnimationPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DQuickExtras": { "name": "Qt53DQuickExtras", "targets": ["Qt5::3DQuickExtras", "Qt5::3DQuickExtrasPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DQuickInput": { "name": "Qt53DQuickInput", "targets": ["Qt5::3DQuickInput", "Qt5::3DQuickInputPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DQuickRender": { "name": "Qt53DQuickRender", "targets": ["Qt5::3DQuickRender", "Qt5::3DQuickRenderPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DQuickScene2D": { "name": "Qt53DQuickScene2D", "targets": ["Qt5::3DQuickScene2D", "Qt5::3DQuickScene2DPrivate"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "Qt53DRender": { "name": "Qt53DRender", "targets": ["Qt5::3DRender", "Qt5::3DRenderPrivate", "Qt5::AssimpSceneImportPlugin", "Qt5::DefaultGeometryLoaderPlugin", "Qt5::GLTFGeometryLoaderPlugin", "Qt5::GLTFSceneExportPlugin", "Qt5::GLTFSceneImportPlugin", "Qt5::Scene2DPlugin"], "portName": "qt5-3d", "portDescription": "Qt5 3d Module - Functionality for near-realtime simulation systems with support for 2D and 3D rendering", "description": "The package qt5-3d provides CMake targets:\r\n\r\n    find_package(Qt53DAnimation CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::3DAnimation Qt5::3DAnimationPrivate)\r\n" },
    "pegtl": { "name": "pegtl", "targets": ["taocpp::pegtl"], "portName": "pegtl", "portDescription": "The Parsing Expression Grammar Template Library (PEGTL) is a zero-dependency C++ header-only parser combinator library for creating parsers according to a Parsing Expression Grammar (PEG).", "description": "The package pegtl provides CMake targets:\r\n\r\n    find_package(pegtl CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE taocpp::pegtl)\r\n" },
    "tinyfiledialogs": { "name": "tinyfiledialogs", "targets": ["tinyfiledialogs::tinyfiledialogs"], "portName": "tinyfiledialogs", "portDescription": "Highly portable and cross-platform dialogs for native inputbox, passwordbox, colorpicker and more", "description": "The package tinyfiledialogs provides CMake targets:\r\n\r\n    find_package(tinyfiledialogs CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE tinyfiledialogs::tinyfiledialogs)\r\n" },
    "aws-c-event-stream": { "name": "aws-c-event-stream", "targets": ["AWS::aws-c-event-stream"], "portName": "aws-c-event-stream", "portDescription": "C99 implementation of the vnd.amazon.event-stream content-type.", "description": "The package aws-c-event-stream provides CMake targets:\r\n\r\n    find_package(aws-c-event-stream CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE AWS::aws-c-event-stream)\r\n" },
    "unofficial-tiny-process-library": { "name": "unofficial-tiny-process-library", "targets": ["unofficial::tiny-process-library::tiny-process-library"], "portName": "tiny-process-library", "portDescription": "A small platform independent library", "description": "The package tiny-process-library provides CMake targets:\r\n\r\n    find_package(unofficial-tiny-process-library CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::tiny-process-library::tiny-process-library)\r\n" },
    "doctest": { "name": "doctest", "targets": ["doctest::doctest"], "portName": "doctest", "portDescription": "The fastest feature-rich C++ single-header testing framework for unit tests and TDD", "description": "The package doctest provides CMake targets:\r\n\r\n    find_package(doctest CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE doctest::doctest)\r\n" },
    "gl3w": { "name": "gl3w", "targets": ["unofficial::gl3w::gl3w"], "portName": "gl3w", "portDescription": "Simple OpenGL core profile loading", "description": "The package gl3w provides CMake targets:\r\n\r\n    find_package(gl3w CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::gl3w::gl3w)\r\n" },
    "Qt5Gui": { "name": "Qt5Gui", "targets": ["Qt5::QICNSPlugin", "Qt5::QTgaPlugin", "Qt5::QTiffPlugin", "Qt5::QWbmpPlugin", "Qt5::QWebpPlugin"], "portName": "qt5-imageformats", "portDescription": "Qt5 Image Formats Module - Plugins for additional image formats: TIFF, MNG, TGA, WBMP", "description": "The package qt5-imageformats provides CMake targets:\r\n\r\n    find_package(Qt5Gui CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::QICNSPlugin Qt5::QTgaPlugin Qt5::QTiffPlugin Qt5::QWbmpPlugin Qt5::QWebpPlugin)\r\n" },
    "proj4": { "name": "proj4", "targets": ["proj"], "portName": "proj4", "portDescription": "PROJ.4 library for cartographic projections", "description": "The package proj4 provides CMake targets:\r\n\r\n    find_package(proj4 CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE proj)\r\n" },
    "miniz": { "name": "miniz", "targets": ["miniz::miniz"], "portName": "miniz", "portDescription": "Single C source file zlib-replacement library", "description": "The package miniz provides CMake targets:\r\n\r\n    find_package(miniz CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE miniz::miniz)\r\n" },
    "mpark_variant": { "name": "mpark_variant", "targets": ["mpark_variant"], "portName": "mpark-variant", "portDescription": "an implementation of C++17 std::variant for C++11/14/17.", "description": "The package mpark-variant provides CMake targets:\r\n\r\n    find_package(mpark_variant CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE mpark_variant)\r\n" },
    "Qt5XmlPatterns": { "name": "Qt5XmlPatterns", "targets": ["Qt5::XmlPatterns", "Qt5::XmlPatternsPrivate"], "portName": "qt5-xmlpatterns", "portDescription": "Qt5 XML Patterns Module - Support for XPath, XQuery, XSLT and XML schema validation", "description": "The package qt5-xmlpatterns provides CMake targets:\r\n\r\n    find_package(Qt5XmlPatterns CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE Qt5::XmlPatterns Qt5::XmlPatternsPrivate)\r\n" },
    "netcdf-c": { "name": "netcdf-c", "targets": ["netcdf"], "portName": "netcdf-c", "portDescription": "a set of self-describing, machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data.", "description": "The package netcdf-c provides CMake targets:\r\n\r\n    find_package(netcdf-c CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE netcdf)\r\n" },
    "unofficial-parson": { "name": "unofficial-parson", "targets": ["unofficial::parson::parson"], "portName": "parson", "portDescription": "a lighweight json library written in C", "description": "The package parson provides CMake targets:\r\n\r\n    find_package(unofficial-parson CONFIG REQUIRED)\r\n    target_link_libraries(main PRIVATE unofficial::parson::parson)\r\n" }
}
